definitions:
  ActivateDTO:
    items:
      properties:
        activateLowerImageVersion:
          type: boolean
        deviceUpgradeMode:
          type: string
        deviceUuid:
          type: string
        distributeIfNeeded:
          type: boolean
        imageUuidList:
          items:
            type: string
          type: array
        smuImageUuidList:
          items:
            type: string
          type: array
      type: object
    type: array
  AddVirtualAccountResponse:
    type: object
  Backup:
    properties:
      response:
        items:
          properties:
            description:
              type: string
          required:
          - description
          type: object
        type: array
      version:
        type: string
    type: object
  BackupDetailResponse:
    properties:
      response:
        items:
          type: object
        type: array
      version:
        type: string
    type: object
  BackupRemote:
    properties:
      response:
        items:
          properties:
            remote_server_dir:
              type: string
            remote_server_ip:
              type: string
            remote_server_passphrase:
              type: string
            remote_server_password:
              type: string
            remote_server_port:
              type: string
            remote_server_username:
              type: string
          required:
          - remote_server_ip
          - remote_server_dir
          - remote_server_port
          - remote_server_passphrase
          - remote_server_username
          - remote_server_password
          type: object
        type: array
      version:
        type: string
    type: object
  CLICredentialDTO:
    items:
      properties:
        comments:
          type: string
        credentialType:
          enum:
          - GLOBAL
          - APP
          type: string
        description:
          type: string
        enablePassword:
          type: string
        id:
          type: string
        instanceTenantId:
          type: string
        instanceUuid:
          type: string
        password:
          type: string
        username:
          type: string
      type: object
    type: array
  ClaimDeviceRequest:
    properties:
      configFileUrl:
        type: string
      configId:
        type: string
      deviceClaimList:
        items:
          properties:
            configList:
              items:
                properties:
                  configId:
                    type: string
                  configParameters:
                    items:
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                      type: object
                    type: array
                type: object
              type: array
            deviceId:
              type: string
            licenseLevel:
              type: string
            licenseType:
              type: string
            topOfStackSerialNumber:
              type: string
          type: object
        type: array
      fileServiceId:
        type: string
      imageId:
        type: string
      imageUrl:
        type: string
      projectId:
        type: string
      workflowId:
        type: string
    type: object
  ClaimDevicesResponse:
    type: object
  ClientDetailResponse:
    properties:
      response:
        properties:
          connectionInfo:
            properties:
              band:
                type: string
              channel:
                type: string
              channelWidth:
                type: string
              hostType:
                type: string
              nwDeviceMac:
                type: string
              nwDeviceName:
                type: string
              protocol:
                type: string
              spatialStream:
                type: string
              timestamp:
                type: string
              uapsd:
                type: string
              wmm:
                type: string
            type: object
          detail:
            properties:
              apGroup:
                type: string
              authType:
                type: string
              avgRssi:
                type: string
              avgSnr:
                type: string
              channel:
                type: string
              clientConnection:
                type: string
              connectedDevice:
                items:
                  type: string
                type: array
              connectionStatus:
                type: string
              dataRate:
                type: string
              dnsFailure:
                type: string
              dnsSuccess:
                type: string
              frequency:
                type: string
              healthScore:
                items:
                  properties:
                    healthType:
                      type: string
                    reason:
                      type: string
                    score:
                      type: string
                  type: object
                type: array
              hostIpV4:
                type: string
              hostIpV6:
                items:
                  type: string
                type: array
              hostMac:
                type: string
              hostName:
                type: string
              hostOs:
                type: string
              hostType:
                type: string
              hostVersion:
                type: string
              id:
                type: string
              issueCount:
                type: string
              lastUpdated:
                type: string
              location:
                type: string
              onboarding:
                properties:
                  aaaServerIp:
                    type: string
                  assocDoneTime:
                    type: string
                  authDoneTime:
                    type: string
                  averageAssocDuration:
                    type: string
                  averageAuthDuration:
                    type: string
                  averageDhcpDuration:
                    type: string
                  averageRunDuration:
                    type: string
                  dhcpDoneTime:
                    type: string
                  dhcpServerIp:
                    type: string
                  maxAssocDuration:
                    type: string
                  maxAuthDuration:
                    type: string
                  maxDhcpDuration:
                    type: string
                  maxRunDuration:
                    type: string
                type: object
              onboardingTime:
                type: string
              port:
                type: string
              rssi:
                type: string
              rxBytes:
                type: string
              snr:
                type: string
              ssid:
                type: string
              subType:
                type: string
              txBytes:
                type: string
              userId:
                type: string
              vlanId:
                type: string
            type: object
          topology:
            properties:
              links:
                items:
                  properties:
                    id:
                      type: string
                    label:
                      items:
                        type: string
                      type: array
                    linkStatus:
                      type: string
                    portUtilization:
                      type: string
                    source:
                      type: string
                    target:
                      type: string
                  type: object
                type: array
              nodes:
                items:
                  properties:
                    clients:
                      type: string
                    connectedDevice:
                      type: string
                    count:
                      type: string
                    description:
                      type: string
                    deviceType:
                      type: string
                    fabricGroup:
                      type: string
                    family:
                      type: string
                    healthScore:
                      type: string
                    id:
                      type: string
                    ip:
                      type: string
                    level:
                      type: string
                    name:
                      type: string
                    nodeType:
                      type: string
                    platformId:
                      type: string
                    radioFrequency:
                      type: string
                    role:
                      type: string
                    softwareVersion:
                      type: string
                    userId:
                      type: string
                  type: object
                type: array
            type: object
        type: object
    type: object
  ClientHealthResponse:
    properties:
      response:
        items:
          properties:
            scoreDetail:
              items:
                properties:
                  clientCount:
                    type: string
                  clientUniqueCount:
                    type: string
                  endtime:
                    type: string
                  scoreCategory:
                    properties:
                      scoreCategory:
                        type: string
                      value:
                        type: string
                    type: object
                  scoreList:
                    items:
                      type: string
                    type: array
                  scoreValue:
                    type: string
                  starttime:
                    type: string
                type: object
              type: array
            siteId:
              type: string
          type: object
        type: array
    type: object
  CollectionProjectDTO:
    type: object
  CollectionTemplateInfo:
    type: object
  CommandRunnerDTO:
    properties:
      commands:
        items:
          type: string
        type: array
      description:
        type: string
      deviceUuids:
        items:
          type: string
        type: array
      name:
        type: string
      timeout:
        type: integer
    type: object
  CountResult:
    properties:
      response:
        type: integer
      version:
        type: string
    type: object
  CreateDeviceResponse:
    type: object
  CreateSSIDRequest:
    properties:
      apNames:
        type: string
      authenticationServer:
        type: string
      authenticationType:
        enum:
        - wpa2_enterprise
        - wpa2_personal
        - open
        type: string
      deviceName:
        type: string
      enableBroadcastSSID:
        type: boolean
      enableFastlane:
        type: boolean
      enableMACFilering:
        type: boolean
      enableWLANBandSelection:
        type: boolean
      fastTransition:
        enum:
        - ADAPTIVE
        - ENABLE
        - DISABLE
        type: string
      interfaceGatewayIPAddress:
        type: string
      interfaceIPAddress:
        type: string
      interfaceLAGPortNumber:
        type: number
      interfaceName:
        type: string
      interfaceNetMaskInCIDRFormat:
        type: string
      managedAPLocations:
        type: string
      passpharse:
        type: string
      radioPolicy:
        enum:
        - '0'
        - '1'
        type: string
      rfProfile:
        enum:
        - LOW
        - TYPICAL
        - HIGH
        type: string
      siteNameHierarchyToMapAPPhysicalLocation:
        type: string
      siteNameHierarchyToMapDevicePhysicalLocation:
        type: string
      sitesNameHierarchyToMapTheProfile:
        type: string
      ssidName:
        type: string
      trafficType:
        enum:
        - voicedata
        - data
        type: string
      vlanId:
        type: number
      wirelessNetworkProfileName:
        type: string
      wlanType:
        type: string
    type: object
  CreateSSIDResponse:
    properties:
      failureReason:
        type: string
      isError:
        type: boolean
      successMessage:
        type: string
    type: object
  CreateWorkflowResponse:
    type: object
  DeleteDeviceResponse:
    type: object
  DeleteSSIDResponse:
    properties:
      failureReason:
        type: string
      isError:
        type: boolean
      successMessage:
        type: string
    type: object
  DeleteWorkflowResponse:
    type: object
  DeregisterVirtualAccountResponse:
    type: object
  Device:
    items:
      properties:
        _id:
          type: string
        deviceInfo:
          properties:
            aaaCredentials:
              properties:
                password:
                  type: string
                username:
                  type: string
              type: object
            addedOn:
              type: integer
            addnMacAddrs:
              items:
                type: string
              type: array
            agentType:
              enum:
              - POSIX
              - IOS
              type: string
            authStatus:
              type: string
            authenticatedSudiSerialNo:
              type: string
            capabilitiesSupported:
              items:
                type: string
              type: array
            cmState:
              enum:
              - NotContacted
              - Contacted
              - Disconnected
              - SecuringConnection
              - SecuredConnection
              - Authenticated
              - ErrorSecuringConnection
              - ErrorAuthenticating
              type: string
            description:
              type: string
            deviceSudiSerialNos:
              items:
                type: string
              type: array
            deviceType:
              type: string
            featuresSupported:
              items:
                type: string
              type: array
            fileSystemList:
              items:
                properties:
                  freespace:
                    type: integer
                  name:
                    type: string
                  readable:
                    type: boolean
                  size:
                    type: integer
                  type:
                    type: string
                  writeable:
                    type: boolean
                type: object
              type: array
            firstContact:
              type: integer
            hostname:
              type: string
            httpHeaders:
              items:
                properties:
                  key:
                    type: string
                  value:
                    type: string
                type: object
              type: array
            imageFile:
              type: string
            imageVersion:
              type: string
            ipInterfaces:
              items:
                properties:
                  ipv4Address:
                    type: object
                  ipv6AddressList:
                    items:
                      type: object
                    type: array
                  macAddress:
                    type: string
                  name:
                    type: string
                  status:
                    type: string
                type: object
              type: array
            lastContact:
              type: integer
            lastSyncTime:
              type: integer
            lastUpdateOn:
              type: integer
            location:
              properties:
                address:
                  type: string
                altitude:
                  type: string
                latitude:
                  type: string
                longitude:
                  type: string
                siteId:
                  type: string
              type: object
            macAddress:
              type: string
            mode:
              type: string
            name:
              type: string
            neighborLinks:
              items:
                properties:
                  localInterfaceName:
                    type: string
                  localMacAddress:
                    type: string
                  localShortInterfaceName:
                    type: string
                  remoteDeviceName:
                    type: string
                  remoteInterfaceName:
                    type: string
                  remoteMacAddress:
                    type: string
                  remotePlatform:
                    type: string
                  remoteShortInterfaceName:
                    type: string
                  remoteVersion:
                    type: string
                type: object
              type: array
            onbState:
              enum:
              - NotContacted
              - Connecting
              - ErrorSecuringConnection
              - ErrorAuthenticating
              - Initializing
              - Initialized
              - ErrorInitializing
              - ErrorSudiAuthorizing
              - ExecutingWorkflow
              - ExecutedWorkflow
              - ErrorExecutingWorkflow
              - ExecutingReset
              - ErrorExecutingReset
              - Provisioned
              type: string
            pid:
              type: string
            pnpProfileList:
              items:
                properties:
                  createdBy:
                    type: string
                  discoveryCreated:
                    type: boolean
                  primaryEndpoint:
                    properties:
                      certificate:
                        type: string
                      fqdn:
                        type: string
                      ipv4Address:
                        type: object
                      ipv6Address:
                        type: object
                      port:
                        type: integer
                      protocol:
                        type: string
                    type: object
                  profileName:
                    type: string
                  secondaryEndpoint:
                    properties:
                      certificate:
                        type: string
                      fqdn:
                        type: string
                      ipv4Address:
                        type: object
                      ipv6Address:
                        type: object
                      port:
                        type: integer
                      protocol:
                        type: string
                    type: object
                type: object
              type: array
            preWorkflowCliOuputs:
              items:
                properties:
                  cli:
                    type: string
                  cliOutput:
                    type: string
                type: object
              type: array
            projectId:
              type: string
            projectName:
              type: string
            reloadRequested:
              type: boolean
            serialNumber:
              type: string
            smartAccountId:
              type: string
            source:
              type: string
            stack:
              type: boolean
            stackInfo:
              properties:
                isFullRing:
                  type: boolean
                stackMemberList:
                  items:
                    properties:
                      hardwareVersion:
                        type: string
                      licenseLevel:
                        type: string
                      licenseType:
                        type: string
                      macAddress:
                        type: string
                      pid:
                        type: string
                      priority:
                        type: integer
                      role:
                        type: string
                      serialNumber:
                        type: string
                      softwareVersion:
                        type: string
                      stackNumber:
                        type: integer
                      state:
                        type: string
                      sudiSerialNumber:
                        type: string
                    type: object
                  type: array
                stackRingProtocol:
                  type: string
                supportsStackWorkflows:
                  type: boolean
                totalMemberCount:
                  type: integer
                validLicenseLevels:
                  items:
                    type: string
                  type: array
              type: object
            state:
              enum:
              - Unclaimed
              - Planned
              - Onboarding
              - Provisioned
              - Error
              - Deleted
              type: string
            sudiRequired:
              type: boolean
            tags:
              type: object
            userSudiSerialNos:
              items:
                type: string
              type: array
            virtualAccountId:
              type: string
            workflowId:
              type: string
            workflowName:
              type: string
          type: object
        runSummaryList:
          items:
            properties:
              details:
                type: string
              errorFlag:
                type: boolean
              historyTaskInfo:
                properties:
                  addnDetails:
                    items:
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                      type: object
                    type: array
                  name:
                    type: string
                  timeTaken:
                    type: integer
                  type:
                    type: string
                  workItemList:
                    items:
                      properties:
                        command:
                          type: string
                        endTime:
                          type: integer
                        outputStr:
                          type: string
                        startTime:
                          type: integer
                        state:
                          type: string
                        timeTaken:
                          type: integer
                      type: object
                    type: array
                type: object
              timestamp:
                type: integer
            type: object
          type: array
        systemResetWorkflow:
          properties:
            _id:
              type: string
            addToInventory:
              type: boolean
            addedOn:
              type: integer
            configId:
              type: string
            currTaskIdx:
              type: integer
            description:
              type: string
            endTime:
              type: integer
            execTime:
              type: integer
            imageId:
              type: string
            lastupdateOn:
              type: integer
            name:
              type: string
            startTime:
              type: integer
            state:
              type: string
            tasks:
              items:
                properties:
                  currWorkItemIdx:
                    type: integer
                  endTime:
                    type: integer
                  name:
                    type: string
                  startTime:
                    type: integer
                  state:
                    type: string
                  taskSeqNo:
                    type: integer
                  timeTaken:
                    type: integer
                  type:
                    type: string
                  workItemList:
                    items:
                      properties:
                        command:
                          type: string
                        endTime:
                          type: integer
                        outputStr:
                          type: string
                        startTime:
                          type: integer
                        state:
                          type: string
                        timeTaken:
                          type: integer
                      type: object
                    type: array
                type: object
              type: array
            tenantId:
              type: string
            type:
              type: string
            useState:
              type: string
            version:
              type: integer
          type: object
        systemWorkflow:
          properties:
            _id:
              type: string
            addToInventory:
              type: boolean
            addedOn:
              type: integer
            configId:
              type: string
            currTaskIdx:
              type: integer
            description:
              type: string
            endTime:
              type: integer
            execTime:
              type: integer
            imageId:
              type: string
            lastupdateOn:
              type: integer
            name:
              type: string
            startTime:
              type: integer
            state:
              type: string
            tasks:
              items:
                properties:
                  currWorkItemIdx:
                    type: integer
                  endTime:
                    type: integer
                  name:
                    type: string
                  startTime:
                    type: integer
                  state:
                    type: string
                  taskSeqNo:
                    type: integer
                  timeTaken:
                    type: integer
                  type:
                    type: string
                  workItemList:
                    items:
                      properties:
                        command:
                          type: string
                        endTime:
                          type: integer
                        outputStr:
                          type: string
                        startTime:
                          type: integer
                        state:
                          type: string
                        timeTaken:
                          type: integer
                      type: object
                    type: array
                type: object
              type: array
            tenantId:
              type: string
            type:
              type: string
            useState:
              type: string
            version:
              type: integer
          type: object
        tenantId:
          type: string
        version:
          type: integer
        workflow:
          properties:
            _id:
              type: string
            addToInventory:
              type: boolean
            addedOn:
              type: integer
            configId:
              type: string
            currTaskIdx:
              type: integer
            description:
              type: string
            endTime:
              type: integer
            execTime:
              type: integer
            imageId:
              type: string
            lastupdateOn:
              type: integer
            name:
              type: string
            startTime:
              type: integer
            state:
              type: string
            tasks:
              items:
                properties:
                  currWorkItemIdx:
                    type: integer
                  endTime:
                    type: integer
                  name:
                    type: string
                  startTime:
                    type: integer
                  state:
                    type: string
                  taskSeqNo:
                    type: integer
                  timeTaken:
                    type: integer
                  type:
                    type: string
                  workItemList:
                    items:
                      properties:
                        command:
                          type: string
                        endTime:
                          type: integer
                        outputStr:
                          type: string
                        startTime:
                          type: integer
                        state:
                          type: string
                        timeTaken:
                          type: integer
                      type: object
                    type: array
                type: object
              type: array
            tenantId:
              type: string
            type:
              type: string
            useState:
              type: string
            version:
              type: integer
          type: object
        workflowParameters:
          properties:
            configList:
              items:
                properties:
                  configId:
                    type: string
                  configParameters:
                    items:
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                      type: object
                    type: array
                type: object
              type: array
            licenseLevel:
              type: string
            licenseType:
              type: string
            topOfStackSerialNumber:
              type: string
          type: object
      type: object
    type: array
  DeviceIfListResult:
    properties:
      response:
        items:
          properties:
            adminStatus:
              type: string
            className:
              type: string
            description:
              type: string
            deviceId:
              type: string
            duplex:
              type: string
            id:
              type: string
            ifIndex:
              type: string
            instanceTenantId:
              type: string
            instanceUuid:
              type: string
            interfaceType:
              type: string
            ipv4Address:
              type: string
            ipv4Mask:
              type: string
            isisSupport:
              type: string
            lastUpdated:
              type: string
            macAddress:
              type: string
            mappedPhysicalInterfaceId:
              type: string
            mappedPhysicalInterfaceName:
              type: string
            mediaType:
              type: string
            nativeVlanId:
              type: string
            ospfSupport:
              type: string
            pid:
              type: string
            portMode:
              type: string
            portName:
              type: string
            portType:
              type: string
            serialNo:
              type: string
            series:
              type: string
            speed:
              type: string
            status:
              type: string
            vlanId:
              type: string
            voiceVlan:
              type: string
          type: object
        type: array
      version:
        type: string
    type: object
  DeviceIfResult:
    properties:
      response:
        properties:
          adminStatus:
            type: string
          className:
            type: string
          description:
            type: string
          deviceId:
            type: string
          duplex:
            type: string
          id:
            type: string
          ifIndex:
            type: string
          instanceTenantId:
            type: string
          instanceUuid:
            type: string
          interfaceType:
            type: string
          ipv4Address:
            type: string
          ipv4Mask:
            type: string
          isisSupport:
            type: string
          lastUpdated:
            type: string
          macAddress:
            type: string
          mappedPhysicalInterfaceId:
            type: string
          mappedPhysicalInterfaceName:
            type: string
          mediaType:
            type: string
          nativeVlanId:
            type: string
          ospfSupport:
            type: string
          pid:
            type: string
          portMode:
            type: string
          portName:
            type: string
          portType:
            type: string
          serialNo:
            type: string
          series:
            type: string
          speed:
            type: string
          status:
            type: string
          vlanId:
            type: string
          voiceVlan:
            type: string
        type: object
      version:
        type: string
    type: object
  DiscoveryJobNIOListResult:
    properties:
      response:
        items:
          properties:
            attributeInfo:
              properties: {}
              type: object
            cliStatus:
              type: string
            discoveryStatus:
              type: string
            endTime:
              type: string
            httpStatus:
              type: string
            id:
              type: string
            inventoryCollectionStatus:
              type: string
            inventoryReachabilityStatus:
              type: string
            ipAddress:
              type: string
            jobStatus:
              type: string
            name:
              type: string
            netconfStatus:
              type: string
            pingStatus:
              type: string
            snmpStatus:
              type: string
            startTime:
              type: string
            taskId:
              type: string
          type: object
        type: array
      version:
        type: string
    type: object
  DiscoveryNIO:
    properties:
      attributeInfo:
        properties: {}
        type: object
      cdpLevel:
        type: integer
      deviceIds:
        type: string
      discoveryCondition:
        type: string
      discoveryStatus:
        type: string
      discoveryType:
        type: string
      enablePasswordList:
        type: string
      globalCredentialIdList:
        items:
          type: string
        type: array
      httpReadCredential:
        properties:
          comments:
            type: string
          credentialType:
            enum:
            - GLOBAL
            - APP
            type: string
          description:
            type: string
          id:
            type: string
          instanceTenantId:
            type: string
          instanceUuid:
            type: string
          password:
            type: string
          port:
            type: integer
          secure:
            type: boolean
          username:
            type: string
        type: object
      httpWriteCredential:
        properties:
          comments:
            type: string
          credentialType:
            enum:
            - GLOBAL
            - APP
            type: string
          description:
            type: string
          id:
            type: string
          instanceTenantId:
            type: string
          instanceUuid:
            type: string
          password:
            type: string
          port:
            type: integer
          secure:
            type: boolean
          username:
            type: string
        type: object
      id:
        type: string
      ipAddressList:
        type: string
      ipFilterList:
        type: string
      isAutoCdp:
        type: boolean
      lldpLevel:
        type: integer
      name:
        type: string
      netconfPort:
        type: string
      numDevices:
        type: integer
      parentDiscoveryId:
        type: string
      passwordList:
        type: string
      preferredMgmtIPMethod:
        type: string
      protocolOrder:
        type: string
      retryCount:
        type: integer
      snmpAuthPassphrase:
        type: string
      snmpAuthProtocol:
        type: string
      snmpMode:
        type: string
      snmpPrivPassphrase:
        type: string
      snmpPrivProtocol:
        type: string
      snmpRoCommunity:
        type: string
      snmpRoCommunityDesc:
        type: string
      snmpRwCommunity:
        type: string
      snmpRwCommunityDesc:
        type: string
      snmpUserName:
        type: string
      timeOut:
        type: integer
      updateMgmtIp:
        type: boolean
      userNameList:
        type: string
    type: object
  DiscoveryNIOListResult:
    properties:
      response:
        items:
          properties:
            attributeInfo:
              properties: {}
              type: object
            cdpLevel:
              type: integer
            deviceIds:
              type: string
            discoveryCondition:
              type: string
            discoveryStatus:
              type: string
            discoveryType:
              type: string
            enablePasswordList:
              type: string
            globalCredentialIdList:
              items:
                type: string
              type: array
            httpReadCredential:
              properties:
                comments:
                  type: string
                credentialType:
                  enum:
                  - GLOBAL
                  - APP
                  type: string
                description:
                  type: string
                id:
                  type: string
                instanceTenantId:
                  type: string
                instanceUuid:
                  type: string
                password:
                  type: string
                port:
                  type: integer
                secure:
                  type: boolean
                username:
                  type: string
              type: object
            httpWriteCredential:
              properties:
                comments:
                  type: string
                credentialType:
                  enum:
                  - GLOBAL
                  - APP
                  type: string
                description:
                  type: string
                id:
                  type: string
                instanceTenantId:
                  type: string
                instanceUuid:
                  type: string
                password:
                  type: string
                port:
                  type: integer
                secure:
                  type: boolean
                username:
                  type: string
              type: object
            id:
              type: string
            ipAddressList:
              type: string
            ipFilterList:
              type: string
            isAutoCdp:
              type: boolean
            lldpLevel:
              type: integer
            name:
              type: string
            netconfPort:
              type: string
            numDevices:
              type: integer
            parentDiscoveryId:
              type: string
            passwordList:
              type: string
            preferredMgmtIPMethod:
              type: string
            protocolOrder:
              type: string
            retryCount:
              type: integer
            snmpAuthPassphrase:
              type: string
            snmpAuthProtocol:
              type: string
            snmpMode:
              type: string
            snmpPrivPassphrase:
              type: string
            snmpPrivProtocol:
              type: string
            snmpRoCommunity:
              type: string
            snmpRoCommunityDesc:
              type: string
            snmpRwCommunity:
              type: string
            snmpRwCommunityDesc:
              type: string
            snmpUserName:
              type: string
            timeOut:
              type: integer
            updateMgmtIp:
              type: boolean
            userNameList:
              type: string
          type: object
        type: array
      version:
        type: string
    type: object
  DiscoveryNIOResult:
    properties:
      response:
        properties:
          attributeInfo:
            properties: {}
            type: object
          cdpLevel:
            type: integer
          deviceIds:
            type: string
          discoveryCondition:
            type: string
          discoveryStatus:
            type: string
          discoveryType:
            type: string
          enablePasswordList:
            type: string
          globalCredentialIdList:
            items:
              type: string
            type: array
          httpReadCredential:
            properties:
              comments:
                type: string
              credentialType:
                enum:
                - GLOBAL
                - APP
                type: string
              description:
                type: string
              id:
                type: string
              instanceTenantId:
                type: string
              instanceUuid:
                type: string
              password:
                type: string
              port:
                type: integer
              secure:
                type: boolean
              username:
                type: string
            type: object
          httpWriteCredential:
            properties:
              comments:
                type: string
              credentialType:
                enum:
                - GLOBAL
                - APP
                type: string
              description:
                type: string
              id:
                type: string
              instanceTenantId:
                type: string
              instanceUuid:
                type: string
              password:
                type: string
              port:
                type: integer
              secure:
                type: boolean
              username:
                type: string
            type: object
          id:
            type: string
          ipAddressList:
            type: string
          ipFilterList:
            type: string
          isAutoCdp:
            type: boolean
          lldpLevel:
            type: integer
          name:
            type: string
          netconfPort:
            type: string
          numDevices:
            type: integer
          parentDiscoveryId:
            type: string
          passwordList:
            type: string
          preferredMgmtIPMethod:
            type: string
          protocolOrder:
            type: string
          retryCount:
            type: integer
          snmpAuthPassphrase:
            type: string
          snmpAuthProtocol:
            type: string
          snmpMode:
            type: string
          snmpPrivPassphrase:
            type: string
          snmpPrivProtocol:
            type: string
          snmpRoCommunity:
            type: string
          snmpRoCommunityDesc:
            type: string
          snmpRwCommunity:
            type: string
          snmpRwCommunityDesc:
            type: string
          snmpUserName:
            type: string
          timeOut:
            type: integer
          updateMgmtIp:
            type: boolean
          userNameList:
            type: string
        type: object
      version:
        type: string
    type: object
  DistributeDTO:
    items:
      properties:
        deviceUuid:
          type: string
        imageUuid:
          type: string
      type: object
    type: array
  DownloadsAFileReferredByTheFileIdResponse:
    type: object
  EditPnPServerProfileResponse:
    type: object
  ExportDeviceDTO:
    properties:
      deviceUuids:
        items:
          type: string
        type: array
      id:
        type: string
      operationEnum:
        enum:
        - CREDENTIALDETAILS
        - DEVICEDETAILS
        type: string
      parameters:
        items:
          type: string
        type: array
      password:
        type: string
    type: object
  FileObjectListResult:
    properties:
      response:
        items:
          properties:
            attributeInfo:
              properties: {}
              type: object
            downloadPath:
              type: string
            encrypted:
              type: boolean
            fileFormat:
              type: string
            fileSize:
              type: string
            id:
              type: string
            md5Checksum:
              type: string
            name:
              type: string
            nameSpace:
              type: string
            sftpServerList:
              items:
                type: object
              type: array
            sha1Checksum:
              type: string
            taskId:
              type: object
          type: object
        type: array
      version:
        type: string
    type: object
  FlowAnalysisListOutput:
    properties:
      response:
        items:
          properties:
            controlPath:
              type: boolean
            createTime:
              type: integer
            destIP:
              type: string
            destPort:
              type: string
            failureReason:
              type: string
            id:
              type: string
            inclusions:
              items:
                type: string
              type: array
            lastUpdateTime:
              type: integer
            periodicRefresh:
              type: boolean
            protocol:
              type: string
            sourceIP:
              type: string
            sourcePort:
              type: string
            status:
              type: string
          type: object
        type: array
      version:
        type: string
    type: object
  FlowAnalysisRequest:
    properties:
      controlPath:
        type: boolean
      destIP:
        type: string
      destPort:
        type: string
      inclusions:
        items:
          type: string
        type: array
      periodicRefresh:
        type: boolean
      protocol:
        type: string
      sourceIP:
        type: string
      sourcePort:
        type: string
    type: object
  FlowAnalysisRequestResultOutput:
    properties:
      response:
        properties:
          flowAnalysisId:
            type: string
          taskId:
            type: string
          url:
            type: string
        type: object
      version:
        type: string
    type: object
  FunctionalCapabilityListResult:
    properties:
      response:
        items:
          properties:
            attributeInfo:
              properties: {}
              type: object
            deviceId:
              type: string
            functionalCapability:
              items:
                properties:
                  attributeInfo:
                    properties: {}
                    type: object
                  functionDetails:
                    items:
                      properties:
                        attributeInfo:
                          properties: {}
                          type: object
                        id:
                          type: string
                        propertyName:
                          type: string
                        stringValue:
                          type: string
                      type: object
                    type: array
                  functionName:
                    type: string
                  functionOpState:
                    enum:
                    - UNKNOWN
                    - NOT_APPLICABLE
                    - DISABLED
                    - ENABLED
                    type: string
                  id:
                    type: string
                type: object
              type: array
            id:
              type: string
          type: object
        type: array
      version:
        type: string
    type: object
  FunctionalCapabilityResult:
    properties:
      response:
        properties:
          attributeInfo:
            properties: {}
            type: object
          functionDetails:
            items:
              properties:
                attributeInfo:
                  properties: {}
                  type: object
                id:
                  type: string
                propertyName:
                  type: string
                stringValue:
                  type: string
              type: object
            type: array
          functionName:
            type: string
          functionOpState:
            enum:
            - UNKNOWN
            - NOT_APPLICABLE
            - DISABLED
            - ENABLED
            type: string
          id:
            type: string
        type: object
      version:
        type: string
    type: object
  GenerateTokenRequest:
    properties:
      Token:
        type: string
    type: object
  GenerateTokenResponse:
    properties:
      Token:
        type: string
    type: object
  GetCategorizedDeviceCountResponse:
    type: object
  GetDeviceByIDResponse:
    type: object
  GetDeviceCountResponse:
    type: object
  GetDeviceHistoryResponse:
    type: object
  GetSmartAccountListResponse:
    type: object
  GetSyncResultForVirtualAccountResponse:
    type: object
  GetVirtualAccountListResponse:
    type: object
  GetWorkflowCountResponse:
    type: object
  GetWorkflowResponse:
    type: object
  GlobalCredentialListResult:
    properties:
      response:
        items:
          properties:
            comments:
              type: string
            credentialType:
              enum:
              - GLOBAL
              - APP
              type: string
            description:
              type: string
            id:
              type: string
            instanceTenantId:
              type: string
            instanceUuid:
              type: string
          type: object
        type: array
      version:
        type: string
    type: object
  GlobalCredentialSubTypeResult:
    properties:
      response:
        type: string
      version:
        type: string
    type: object
  HTTPReadCredentialDTO:
    items:
      properties:
        comments:
          type: string
        credentialType:
          enum:
          - GLOBAL
          - APP
          type: string
        description:
          type: string
        id:
          type: string
        instanceTenantId:
          type: string
        instanceUuid:
          type: string
        password:
          type: string
        port:
          type: integer
        secure:
          type: boolean
        username:
          type: string
      type: object
    type: array
  HTTPWriteCredentialDTO:
    properties:
      comments:
        type: string
      credentialType:
        enum:
        - GLOBAL
        - APP
        type: string
      description:
        type: string
      id:
        type: string
      instanceTenantId:
        type: string
      instanceUuid:
        type: string
      password:
        type: string
      port:
        type: integer
      secure:
        type: boolean
      username:
        type: string
    type: object
  ImageImportFromUrlDTO:
    items:
      properties:
        applicationType:
          type: string
        imageFamily:
          type: string
        sourceURL:
          type: string
        thirdParty:
          type: boolean
        vendor:
          type: string
      type: object
    type: array
  ImageInfoListResponse:
    properties:
      response:
        items:
          properties:
            applicableDevicesForImage:
              items:
                properties:
                  mdfId:
                    type: string
                  productId:
                    items:
                      type: string
                    type: array
                  productName:
                    type: string
                type: object
              type: array
            applicationType:
              type: string
            createdTime:
              type: string
            extendedAttributes:
              properties: {}
              type: object
            family:
              type: string
            feature:
              type: string
            fileServiceId:
              type: string
            fileSize:
              type: string
            imageIntegrityStatus:
              type: string
            imageName:
              type: string
            imageSeries:
              items:
                type: string
              type: array
            imageSource:
              type: string
            imageType:
              type: string
            imageUuid:
              type: string
            importSourceType:
              enum:
              - DEVICE
              - REMOTEURL
              - CCO
              - FILESYSTEM
              type: string
            isTaggedGolden:
              type: boolean
            md5Checksum:
              type: string
            name:
              type: string
            profileInfo:
              items:
                properties:
                  description:
                    type: string
                  extendedAttributes:
                    properties: {}
                    type: object
                  memory:
                    type: integer
                  productType:
                    type: string
                  profileName:
                    type: string
                  shares:
                    type: integer
                  vCpu:
                    type: integer
                type: object
              type: array
            shaCheckSum:
              type: string
            vendor:
              type: string
            version:
              type: string
          type: object
        type: array
      version:
        type: string
    type: object
  ImportManyDevicesResponse:
    type: object
  InventoryDeviceInfo:
    properties:
      cliTransport:
        type: string
      computeDevice:
        type: boolean
      enablePassword:
        type: string
      extendedDiscoveryInfo:
        type: string
      httpPassword:
        type: string
      httpPort:
        type: string
      httpSecure:
        type: boolean
      httpUserName:
        type: string
      ipAddress:
        items:
          type: string
        type: array
      merakiOrgId:
        items:
          type: string
        type: array
      netconfPort:
        type: string
      password:
        type: string
      serialNumber:
        type: string
      snmpAuthPassphrase:
        type: string
      snmpAuthProtocol:
        type: string
      snmpMode:
        type: string
      snmpPrivPassphrase:
        type: string
      snmpPrivProtocol:
        type: string
      snmpROCommunity:
        type: string
      snmpRWCommunity:
        type: string
      snmpRetry:
        type: integer
      snmpTimeout:
        type: integer
      snmpUserName:
        type: string
      snmpVersion:
        type: string
      type:
        enum:
        - COMPUTE_DEVICE
        - MERAKI_DASHBOARD
        - NETWORK_DEVICE
        - NODATACHANGE
        type: string
      updateMgmtIPaddressList:
        items:
          properties:
            existMgmtIpAddress:
              type: string
            newMgmtIpAddress:
              type: string
          type: object
        type: array
      userName:
        type: string
    type: object
  InventoryRequest:
    properties:
      cdpLevel:
        type: integer
      discoveryType:
        type: string
      enablePasswordList:
        items:
          type: string
        type: array
      globalCredentialIdList:
        items:
          type: string
        type: array
      httpReadCredential:
        properties:
          comments:
            type: string
          credentialType:
            enum:
            - GLOBAL
            - APP
            type: string
          description:
            type: string
          id:
            type: string
          instanceTenantId:
            type: string
          instanceUuid:
            type: string
          password:
            type: string
          port:
            type: integer
          secure:
            type: boolean
          username:
            type: string
        type: object
      httpWriteCredential:
        properties:
          comments:
            type: string
          credentialType:
            enum:
            - GLOBAL
            - APP
            type: string
          description:
            type: string
          id:
            type: string
          instanceTenantId:
            type: string
          instanceUuid:
            type: string
          password:
            type: string
          port:
            type: integer
          secure:
            type: boolean
          username:
            type: string
        type: object
      ipAddressList:
        type: string
      ipFilterList:
        items:
          type: string
        type: array
      lldpLevel:
        type: integer
      name:
        type: string
      netconfPort:
        type: string
      noAddNewDevice:
        type: boolean
      parentDiscoveryId:
        type: string
      passwordList:
        items:
          type: string
        type: array
      preferredMgmtIPMethod:
        type: string
      protocolOrder:
        type: string
      reDiscovery:
        type: boolean
      retry:
        type: integer
      snmpAuthPassphrase:
        type: string
      snmpAuthProtocol:
        type: string
      snmpMode:
        type: string
      snmpPrivPassphrase:
        type: string
      snmpPrivProtocol:
        type: string
      snmpROCommunity:
        type: string
      snmpROCommunityDesc:
        type: string
      snmpRWCommunity:
        type: string
      snmpRWCommunityDesc:
        type: string
      snmpUserName:
        type: string
      snmpVersion:
        type: string
      timeout:
        type: integer
      updateMgmtIp:
        type: boolean
      userNameList:
        items:
          type: string
        type: array
    type: object
  Ippool:
    properties:
      dhcpServerIps:
        type: string
      dnsServerIps:
        type: string
      gateways:
        items:
          type: string
        minItems: 1
        type: array
      ipPoolCidr:
        type: string
      ipPoolName:
        type: string
      overlapping:
        type: string
    required:
    - ipPoolName
    - ipPoolCidr
    - gateways
    type: object
  LegitCliKeyResult:
    properties:
      response:
        items:
          type: string
        type: array
      version:
        type: string
    type: object
  ListDevicesResponse:
    type: object
  ListWorkflowsResponse:
    type: object
  ModuleListResult:
    properties:
      response:
        items:
          properties:
            assemblyNumber:
              type: string
            assemblyRevision:
              type: string
            attributeInfo:
              properties: {}
              type: object
            containmentEntity:
              type: string
            description:
              type: string
            entityPhysicalIndex:
              type: string
            id:
              type: string
            isFieldReplaceable:
              enum:
              - UNKNOWN
              - 'TRUE'
              - 'FALSE'
              - NOT_APPLICABLE
              type: string
            isReportingAlarmsAllowed:
              enum:
              - UNKNOWN
              - 'TRUE'
              - 'FALSE'
              - NOT_APPLICABLE
              type: string
            manufacturer:
              type: string
            moduleIndex:
              type: integer
            name:
              type: string
            operationalStateCode:
              type: string
            partNumber:
              type: string
            serialNumber:
              type: string
            vendorEquipmentType:
              type: string
          type: object
        type: array
      version:
        type: string
    type: object
  ModuleResult:
    properties:
      response:
        properties:
          assemblyNumber:
            type: string
          assemblyRevision:
            type: string
          attributeInfo:
            properties: {}
            type: object
          containmentEntity:
            type: string
          description:
            type: string
          entityPhysicalIndex:
            type: string
          id:
            type: string
          isFieldReplaceable:
            enum:
            - UNKNOWN
            - 'TRUE'
            - 'FALSE'
            - NOT_APPLICABLE
            type: string
          isReportingAlarmsAllowed:
            enum:
            - UNKNOWN
            - 'TRUE'
            - 'FALSE'
            - NOT_APPLICABLE
            type: string
          manufacturer:
            type: string
          moduleIndex:
            type: integer
          name:
            type: string
          operationalStateCode:
            type: string
          partNumber:
            type: string
          serialNumber:
            type: string
          vendorEquipmentType:
            type: string
        type: object
      version:
        type: string
    type: object
  NameSpaceListResult:
    properties:
      response:
        items:
          type: string
        type: array
      version:
        type: string
    type: object
  NetconfCredentialDTO:
    items:
      properties:
        comments:
          type: string
        credentialType:
          enum:
          - GLOBAL
          - APP
          type: string
        description:
          type: string
        id:
          type: string
        instanceTenantId:
          type: string
        instanceUuid:
          type: string
        netconfPort:
          type: string
      type: object
    type: array
  NetworkDeviceBriefNIO:
    properties:
      id:
        type: string
      role:
        type: string
      roleSource:
        type: string
    type: object
  NetworkDeviceBriefNIOResult:
    properties:
      response:
        properties:
          id:
            type: string
          role:
            type: string
          roleSource:
            type: string
        type: object
      version:
        type: string
    type: object
  NetworkDeviceDetailResponse:
    properties:
      response:
        properties:
          connectedTime:
            type: string
          cpuScore:
            type: string
          macAddress:
            type: string
          managementIpAddr:
            type: string
          memoryScore:
            type: string
          mode:
            type: string
          nwDeviceFamily:
            type: string
          nwDeviceId:
            type: string
          nwDeviceName:
            type: string
          nwDeviceRole:
            type: string
          nwDeviceType:
            type: string
          opState:
            type: string
          overallHealth:
            type: string
          platformId:
            type: string
          resetReason:
            type: string
          serialNumber:
            type: string
          softwareVersion:
            type: string
          subMode:
            type: string
          sysUptime:
            type: string
          upTime:
            type: string
        type: object
    type: object
  NetworkDeviceListResult:
    properties:
      response:
        items:
          properties:
            apManagerInterfaceIp:
              type: string
            associatedWlcIp:
              type: string
            bootDateTime:
              type: string
            collectionInterval:
              type: string
            collectionStatus:
              type: string
            errorCode:
              type: string
            errorDescription:
              type: string
            family:
              type: string
            hostname:
              type: string
            id:
              type: string
            instanceTenantId:
              type: string
            instanceUuid:
              type: string
            interfaceCount:
              type: string
            inventoryStatusDetail:
              type: string
            lastUpdateTime:
              type: string
            lastUpdated:
              type: string
            lineCardCount:
              type: string
            lineCardId:
              type: string
            location:
              type: string
            locationName:
              type: string
            macAddress:
              type: string
            managementIpAddress:
              type: string
            memorySize:
              type: string
            platformId:
              type: string
            reachabilityFailureReason:
              type: string
            reachabilityStatus:
              type: string
            role:
              type: string
            roleSource:
              type: string
            serialNumber:
              type: string
            series:
              type: string
            snmpContact:
              type: string
            snmpLocation:
              type: string
            softwareType:
              type: string
            softwareVersion:
              type: string
            tagCount:
              type: string
            tunnelUdpPort:
              type: string
            type:
              type: string
            upTime:
              type: string
            waasDeviceMode:
              type: string
          type: object
        type: array
      version:
        type: string
    type: object
  NetworkDeviceNIOListResult:
    properties:
      response:
        items:
          properties:
            anchorWlcForAp:
              type: string
            authModelId:
              type: string
            avgUpdateFrequency:
              type: integer
            bootDateTime:
              type: string
            cliStatus:
              type: string
            duplicateDeviceId:
              type: string
            errorCode:
              type: string
            errorDescription:
              type: string
            family:
              type: string
            hostname:
              type: string
            httpStatus:
              type: string
            id:
              type: string
            imageName:
              type: string
            ingressQueueConfig:
              type: string
            interfaceCount:
              type: string
            inventoryCollectionStatus:
              type: string
            inventoryReachabilityStatus:
              type: string
            lastUpdated:
              type: string
            lineCardCount:
              type: string
            lineCardId:
              type: string
            location:
              type: string
            locationName:
              type: string
            macAddress:
              type: string
            managementIpAddress:
              type: string
            memorySize:
              type: string
            netconfStatus:
              type: string
            numUpdates:
              type: integer
            pingStatus:
              type: string
            platformId:
              type: string
            portRange:
              type: string
            qosStatus:
              type: string
            reachabilityFailureReason:
              type: string
            reachabilityStatus:
              type: string
            role:
              type: string
            roleSource:
              type: string
            serialNumber:
              type: string
            snmpContact:
              type: string
            snmpLocation:
              type: string
            snmpStatus:
              type: string
            softwareVersion:
              type: string
            tag:
              type: string
            tagCount:
              type: integer
            type:
              type: string
            upTime:
              type: string
            vendor:
              type: string
            wlcApDeviceStatus:
              type: string
          type: object
        type: array
      version:
        type: string
    type: object
  NetworkDeviceResult:
    properties:
      response:
        properties:
          apManagerInterfaceIp:
            type: string
          associatedWlcIp:
            type: string
          bootDateTime:
            type: string
          collectionInterval:
            type: string
          collectionStatus:
            type: string
          errorCode:
            type: string
          errorDescription:
            type: string
          family:
            type: string
          hostname:
            type: string
          id:
            type: string
          instanceTenantId:
            type: string
          instanceUuid:
            type: string
          interfaceCount:
            type: string
          inventoryStatusDetail:
            type: string
          lastUpdateTime:
            type: string
          lastUpdated:
            type: string
          lineCardCount:
            type: string
          lineCardId:
            type: string
          location:
            type: string
          locationName:
            type: string
          macAddress:
            type: string
          managementIpAddress:
            type: string
          memorySize:
            type: string
          platformId:
            type: string
          reachabilityFailureReason:
            type: string
          reachabilityStatus:
            type: string
          role:
            type: string
          roleSource:
            type: string
          serialNumber:
            type: string
          series:
            type: string
          snmpContact:
            type: string
          snmpLocation:
            type: string
          softwareType:
            type: string
          softwareVersion:
            type: string
          tagCount:
            type: string
          tunnelUdpPort:
            type: string
          type:
            type: string
          upTime:
            type: string
          waasDeviceMode:
            type: string
        type: object
      version:
        type: string
    type: object
  NetworkDeviceSyncApiRequest:
    items:
      type: object
    type: array
  PathResponseResult:
    properties:
      response:
        properties:
          detailedStatus:
            properties:
              aclTraceCalculation:
                type: string
              aclTraceCalculationFailureReason:
                type: string
            type: object
          lastUpdate:
            type: string
          networkElements:
            items:
              properties:
                accuracyList:
                  items:
                    properties:
                      percent:
                        type: integer
                      reason:
                        type: string
                    type: object
                  type: array
                detailedStatus:
                  properties:
                    aclTraceCalculation:
                      type: string
                    aclTraceCalculationFailureReason:
                      type: string
                  type: object
                deviceStatistics:
                  properties:
                    cpuStatistics:
                      properties:
                        fiveMinUsageInPercentage:
                          type: number
                        fiveSecsUsageInPercentage:
                          type: number
                        oneMinUsageInPercentage:
                          type: number
                        refreshedAt:
                          type: integer
                      type: object
                    memoryStatistics:
                      properties:
                        memoryUsage:
                          type: integer
                        refreshedAt:
                          type: integer
                        totalMemory:
                          type: integer
                      type: object
                  type: object
                deviceStatsCollection:
                  type: string
                deviceStatsCollectionFailureReason:
                  type: string
                egressPhysicalInterface:
                  properties:
                    aclAnalysis:
                      properties:
                        aclName:
                          type: string
                        matchingAces:
                          items:
                            properties:
                              ace:
                                type: string
                              matchingPorts:
                                items:
                                  properties:
                                    ports:
                                      items:
                                        properties:
                                          destPorts:
                                            items:
                                              type: string
                                            type: array
                                          sourcePorts:
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      type: array
                                    protocol:
                                      type: string
                                  type: object
                                type: array
                              result:
                                type: string
                            type: object
                          type: array
                        result:
                          type: string
                      type: object
                    id:
                      type: string
                    interfaceStatistics:
                      properties:
                        adminStatus:
                          type: string
                        inputPackets:
                          type: integer
                        inputQueueCount:
                          type: integer
                        inputQueueDrops:
                          type: integer
                        inputQueueFlushes:
                          type: integer
                        inputQueueMaxDepth:
                          type: integer
                        inputRatebps:
                          type: integer
                        operationalStatus:
                          type: string
                        outputDrop:
                          type: integer
                        outputPackets:
                          type: integer
                        outputQueueCount:
                          type: integer
                        outputQueueDepth:
                          type: integer
                        outputRatebps:
                          type: integer
                        refreshedAt:
                          type: integer
                      type: object
                    interfaceStatsCollection:
                      type: string
                    interfaceStatsCollectionFailureReason:
                      type: string
                    name:
                      type: string
                    pathOverlayInfo:
                      items:
                        properties:
                          controlPlane:
                            type: string
                          dataPacketEncapsulation:
                            type: string
                          destIp:
                            type: string
                          destPort:
                            type: string
                          protocol:
                            type: string
                          sourceIp:
                            type: string
                          sourcePort:
                            type: string
                          vxlanInfo:
                            properties:
                              dscp:
                                type: string
                              vnid:
                                type: string
                            type: object
                        type: object
                      type: array
                    qosStatistics:
                      items:
                        properties:
                          classMapName:
                            type: string
                          dropRate:
                            type: integer
                          numBytes:
                            type: integer
                          numPackets:
                            type: integer
                          offeredRate:
                            type: integer
                          queueBandwidthbps:
                            type: string
                          queueDepth:
                            type: integer
                          queueNoBufferDrops:
                            type: integer
                          queueTotalDrops:
                            type: integer
                          refreshedAt:
                            type: integer
                        type: object
                      type: array
                    qosStatsCollection:
                      type: string
                    qosStatsCollectionFailureReason:
                      type: string
                    usedVlan:
                      type: string
                    vrfName:
                      type: string
                  type: object
                egressVirtualInterface:
                  properties:
                    aclAnalysis:
                      properties:
                        aclName:
                          type: string
                        matchingAces:
                          items:
                            properties:
                              ace:
                                type: string
                              matchingPorts:
                                items:
                                  properties:
                                    ports:
                                      items:
                                        properties:
                                          destPorts:
                                            items:
                                              type: string
                                            type: array
                                          sourcePorts:
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      type: array
                                    protocol:
                                      type: string
                                  type: object
                                type: array
                              result:
                                type: string
                            type: object
                          type: array
                        result:
                          type: string
                      type: object
                    id:
                      type: string
                    interfaceStatistics:
                      properties:
                        adminStatus:
                          type: string
                        inputPackets:
                          type: integer
                        inputQueueCount:
                          type: integer
                        inputQueueDrops:
                          type: integer
                        inputQueueFlushes:
                          type: integer
                        inputQueueMaxDepth:
                          type: integer
                        inputRatebps:
                          type: integer
                        operationalStatus:
                          type: string
                        outputDrop:
                          type: integer
                        outputPackets:
                          type: integer
                        outputQueueCount:
                          type: integer
                        outputQueueDepth:
                          type: integer
                        outputRatebps:
                          type: integer
                        refreshedAt:
                          type: integer
                      type: object
                    interfaceStatsCollection:
                      type: string
                    interfaceStatsCollectionFailureReason:
                      type: string
                    name:
                      type: string
                    pathOverlayInfo:
                      items:
                        properties:
                          controlPlane:
                            type: string
                          dataPacketEncapsulation:
                            type: string
                          destIp:
                            type: string
                          destPort:
                            type: string
                          protocol:
                            type: string
                          sourceIp:
                            type: string
                          sourcePort:
                            type: string
                          vxlanInfo:
                            properties:
                              dscp:
                                type: string
                              vnid:
                                type: string
                            type: object
                        type: object
                      type: array
                    qosStatistics:
                      items:
                        properties:
                          classMapName:
                            type: string
                          dropRate:
                            type: integer
                          numBytes:
                            type: integer
                          numPackets:
                            type: integer
                          offeredRate:
                            type: integer
                          queueBandwidthbps:
                            type: string
                          queueDepth:
                            type: integer
                          queueNoBufferDrops:
                            type: integer
                          queueTotalDrops:
                            type: integer
                          refreshedAt:
                            type: integer
                        type: object
                      type: array
                    qosStatsCollection:
                      type: string
                    qosStatsCollectionFailureReason:
                      type: string
                    usedVlan:
                      type: string
                    vrfName:
                      type: string
                  type: object
                flexConnect:
                  properties:
                    authentication:
                      enum:
                      - LOCAL
                      - CENTRAL
                      type: string
                    dataSwitching:
                      enum:
                      - LOCAL
                      - CENTRAL
                      type: string
                    egressAclAnalysis:
                      properties:
                        aclName:
                          type: string
                        matchingAces:
                          items:
                            properties:
                              ace:
                                type: string
                              matchingPorts:
                                items:
                                  properties:
                                    ports:
                                      items:
                                        properties:
                                          destPorts:
                                            items:
                                              type: string
                                            type: array
                                          sourcePorts:
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      type: array
                                    protocol:
                                      type: string
                                  type: object
                                type: array
                              result:
                                type: string
                            type: object
                          type: array
                        result:
                          type: string
                      type: object
                    ingressAclAnalysis:
                      properties:
                        aclName:
                          type: string
                        matchingAces:
                          items:
                            properties:
                              ace:
                                type: string
                              matchingPorts:
                                items:
                                  properties:
                                    ports:
                                      items:
                                        properties:
                                          destPorts:
                                            items:
                                              type: string
                                            type: array
                                          sourcePorts:
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      type: array
                                    protocol:
                                      type: string
                                  type: object
                                type: array
                              result:
                                type: string
                            type: object
                          type: array
                        result:
                          type: string
                      type: object
                    wirelessLanControllerId:
                      type: string
                    wirelessLanControllerName:
                      type: string
                  type: object
                id:
                  type: string
                ingressPhysicalInterface:
                  properties:
                    aclAnalysis:
                      properties:
                        aclName:
                          type: string
                        matchingAces:
                          items:
                            properties:
                              ace:
                                type: string
                              matchingPorts:
                                items:
                                  properties:
                                    ports:
                                      items:
                                        properties:
                                          destPorts:
                                            items:
                                              type: string
                                            type: array
                                          sourcePorts:
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      type: array
                                    protocol:
                                      type: string
                                  type: object
                                type: array
                              result:
                                type: string
                            type: object
                          type: array
                        result:
                          type: string
                      type: object
                    id:
                      type: string
                    interfaceStatistics:
                      properties:
                        adminStatus:
                          type: string
                        inputPackets:
                          type: integer
                        inputQueueCount:
                          type: integer
                        inputQueueDrops:
                          type: integer
                        inputQueueFlushes:
                          type: integer
                        inputQueueMaxDepth:
                          type: integer
                        inputRatebps:
                          type: integer
                        operationalStatus:
                          type: string
                        outputDrop:
                          type: integer
                        outputPackets:
                          type: integer
                        outputQueueCount:
                          type: integer
                        outputQueueDepth:
                          type: integer
                        outputRatebps:
                          type: integer
                        refreshedAt:
                          type: integer
                      type: object
                    interfaceStatsCollection:
                      type: string
                    interfaceStatsCollectionFailureReason:
                      type: string
                    name:
                      type: string
                    pathOverlayInfo:
                      items:
                        properties:
                          controlPlane:
                            type: string
                          dataPacketEncapsulation:
                            type: string
                          destIp:
                            type: string
                          destPort:
                            type: string
                          protocol:
                            type: string
                          sourceIp:
                            type: string
                          sourcePort:
                            type: string
                          vxlanInfo:
                            properties:
                              dscp:
                                type: string
                              vnid:
                                type: string
                            type: object
                        type: object
                      type: array
                    qosStatistics:
                      items:
                        properties:
                          classMapName:
                            type: string
                          dropRate:
                            type: integer
                          numBytes:
                            type: integer
                          numPackets:
                            type: integer
                          offeredRate:
                            type: integer
                          queueBandwidthbps:
                            type: string
                          queueDepth:
                            type: integer
                          queueNoBufferDrops:
                            type: integer
                          queueTotalDrops:
                            type: integer
                          refreshedAt:
                            type: integer
                        type: object
                      type: array
                    qosStatsCollection:
                      type: string
                    qosStatsCollectionFailureReason:
                      type: string
                    usedVlan:
                      type: string
                    vrfName:
                      type: string
                  type: object
                ingressVirtualInterface:
                  properties:
                    aclAnalysis:
                      properties:
                        aclName:
                          type: string
                        matchingAces:
                          items:
                            properties:
                              ace:
                                type: string
                              matchingPorts:
                                items:
                                  properties:
                                    ports:
                                      items:
                                        properties:
                                          destPorts:
                                            items:
                                              type: string
                                            type: array
                                          sourcePorts:
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      type: array
                                    protocol:
                                      type: string
                                  type: object
                                type: array
                              result:
                                type: string
                            type: object
                          type: array
                        result:
                          type: string
                      type: object
                    id:
                      type: string
                    interfaceStatistics:
                      properties:
                        adminStatus:
                          type: string
                        inputPackets:
                          type: integer
                        inputQueueCount:
                          type: integer
                        inputQueueDrops:
                          type: integer
                        inputQueueFlushes:
                          type: integer
                        inputQueueMaxDepth:
                          type: integer
                        inputRatebps:
                          type: integer
                        operationalStatus:
                          type: string
                        outputDrop:
                          type: integer
                        outputPackets:
                          type: integer
                        outputQueueCount:
                          type: integer
                        outputQueueDepth:
                          type: integer
                        outputRatebps:
                          type: integer
                        refreshedAt:
                          type: integer
                      type: object
                    interfaceStatsCollection:
                      type: string
                    interfaceStatsCollectionFailureReason:
                      type: string
                    name:
                      type: string
                    pathOverlayInfo:
                      items:
                        properties:
                          controlPlane:
                            type: string
                          dataPacketEncapsulation:
                            type: string
                          destIp:
                            type: string
                          destPort:
                            type: string
                          protocol:
                            type: string
                          sourceIp:
                            type: string
                          sourcePort:
                            type: string
                          vxlanInfo:
                            properties:
                              dscp:
                                type: string
                              vnid:
                                type: string
                            type: object
                        type: object
                      type: array
                    qosStatistics:
                      items:
                        properties:
                          classMapName:
                            type: string
                          dropRate:
                            type: integer
                          numBytes:
                            type: integer
                          numPackets:
                            type: integer
                          offeredRate:
                            type: integer
                          queueBandwidthbps:
                            type: string
                          queueDepth:
                            type: integer
                          queueNoBufferDrops:
                            type: integer
                          queueTotalDrops:
                            type: integer
                          refreshedAt:
                            type: integer
                        type: object
                      type: array
                    qosStatsCollection:
                      type: string
                    qosStatsCollectionFailureReason:
                      type: string
                    usedVlan:
                      type: string
                    vrfName:
                      type: string
                  type: object
                ip:
                  type: string
                linkInformationSource:
                  type: string
                name:
                  type: string
                perfMonCollection:
                  type: string
                perfMonCollectionFailureReason:
                  type: string
                perfMonStatistics:
                  items:
                    properties:
                      byteRate:
                        type: integer
                      destIpAddress:
                        type: string
                      destPort:
                        type: string
                      inputInterface:
                        type: string
                      ipv4DSCP:
                        type: string
                      ipv4TTL:
                        type: integer
                      outputInterface:
                        type: string
                      packetBytes:
                        type: integer
                      packetCount:
                        type: integer
                      packetLoss:
                        type: integer
                      packetLossPercentage:
                        type: number
                      protocol:
                        type: string
                      refreshedAt:
                        type: integer
                      rtpJitterMax:
                        type: integer
                      rtpJitterMean:
                        type: integer
                      rtpJitterMin:
                        type: integer
                      sourceIpAddress:
                        type: string
                      sourcePort:
                        type: string
                    type: object
                  type: array
                role:
                  type: string
                ssid:
                  type: string
                tunnels:
                  items:
                    type: string
                  type: array
                type:
                  type: string
                wlanId:
                  type: string
              type: object
            type: array
          networkElementsInfo:
            items:
              properties:
                accuracyList:
                  items:
                    properties:
                      percent:
                        type: integer
                      reason:
                        type: string
                    type: object
                  type: array
                detailedStatus:
                  properties:
                    aclTraceCalculation:
                      type: string
                    aclTraceCalculationFailureReason:
                      type: string
                  type: object
                deviceStatistics:
                  properties:
                    cpuStatistics:
                      properties:
                        fiveMinUsageInPercentage:
                          type: number
                        fiveSecsUsageInPercentage:
                          type: number
                        oneMinUsageInPercentage:
                          type: number
                        refreshedAt:
                          type: integer
                      type: object
                    memoryStatistics:
                      properties:
                        memoryUsage:
                          type: integer
                        refreshedAt:
                          type: integer
                        totalMemory:
                          type: integer
                      type: object
                  type: object
                deviceStatsCollection:
                  type: string
                deviceStatsCollectionFailureReason:
                  type: string
                egressInterface:
                  properties:
                    physicalInterface:
                      properties:
                        aclAnalysis:
                          properties:
                            aclName:
                              type: string
                            matchingAces:
                              items:
                                properties:
                                  ace:
                                    type: string
                                  matchingPorts:
                                    items:
                                      properties:
                                        ports:
                                          items:
                                            properties:
                                              destPorts:
                                                items:
                                                  type: string
                                                type: array
                                              sourcePorts:
                                                items:
                                                  type: string
                                                type: array
                                            type: object
                                          type: array
                                        protocol:
                                          type: string
                                      type: object
                                    type: array
                                  result:
                                    type: string
                                type: object
                              type: array
                            result:
                              type: string
                          type: object
                        id:
                          type: string
                        interfaceStatistics:
                          properties:
                            adminStatus:
                              type: string
                            inputPackets:
                              type: integer
                            inputQueueCount:
                              type: integer
                            inputQueueDrops:
                              type: integer
                            inputQueueFlushes:
                              type: integer
                            inputQueueMaxDepth:
                              type: integer
                            inputRatebps:
                              type: integer
                            operationalStatus:
                              type: string
                            outputDrop:
                              type: integer
                            outputPackets:
                              type: integer
                            outputQueueCount:
                              type: integer
                            outputQueueDepth:
                              type: integer
                            outputRatebps:
                              type: integer
                            refreshedAt:
                              type: integer
                          type: object
                        interfaceStatsCollection:
                          type: string
                        interfaceStatsCollectionFailureReason:
                          type: string
                        name:
                          type: string
                        pathOverlayInfo:
                          items:
                            properties:
                              controlPlane:
                                type: string
                              dataPacketEncapsulation:
                                type: string
                              destIp:
                                type: string
                              destPort:
                                type: string
                              protocol:
                                type: string
                              sourceIp:
                                type: string
                              sourcePort:
                                type: string
                              vxlanInfo:
                                properties:
                                  dscp:
                                    type: string
                                  vnid:
                                    type: string
                                type: object
                            type: object
                          type: array
                        qosStatistics:
                          items:
                            properties:
                              classMapName:
                                type: string
                              dropRate:
                                type: integer
                              numBytes:
                                type: integer
                              numPackets:
                                type: integer
                              offeredRate:
                                type: integer
                              queueBandwidthbps:
                                type: string
                              queueDepth:
                                type: integer
                              queueNoBufferDrops:
                                type: integer
                              queueTotalDrops:
                                type: integer
                              refreshedAt:
                                type: integer
                            type: object
                          type: array
                        qosStatsCollection:
                          type: string
                        qosStatsCollectionFailureReason:
                          type: string
                        usedVlan:
                          type: string
                        vrfName:
                          type: string
                      type: object
                    virtualInterface:
                      items:
                        properties:
                          aclAnalysis:
                            properties:
                              aclName:
                                type: string
                              matchingAces:
                                items:
                                  properties:
                                    ace:
                                      type: string
                                    matchingPorts:
                                      items:
                                        properties:
                                          ports:
                                            items:
                                              properties:
                                                destPorts:
                                                  items:
                                                    type: string
                                                  type: array
                                                sourcePorts:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          protocol:
                                            type: string
                                        type: object
                                      type: array
                                    result:
                                      type: string
                                  type: object
                                type: array
                              result:
                                type: string
                            type: object
                          id:
                            type: string
                          interfaceStatistics:
                            properties:
                              adminStatus:
                                type: string
                              inputPackets:
                                type: integer
                              inputQueueCount:
                                type: integer
                              inputQueueDrops:
                                type: integer
                              inputQueueFlushes:
                                type: integer
                              inputQueueMaxDepth:
                                type: integer
                              inputRatebps:
                                type: integer
                              operationalStatus:
                                type: string
                              outputDrop:
                                type: integer
                              outputPackets:
                                type: integer
                              outputQueueCount:
                                type: integer
                              outputQueueDepth:
                                type: integer
                              outputRatebps:
                                type: integer
                              refreshedAt:
                                type: integer
                            type: object
                          interfaceStatsCollection:
                            type: string
                          interfaceStatsCollectionFailureReason:
                            type: string
                          name:
                            type: string
                          pathOverlayInfo:
                            items:
                              properties:
                                controlPlane:
                                  type: string
                                dataPacketEncapsulation:
                                  type: string
                                destIp:
                                  type: string
                                destPort:
                                  type: string
                                protocol:
                                  type: string
                                sourceIp:
                                  type: string
                                sourcePort:
                                  type: string
                                vxlanInfo:
                                  properties:
                                    dscp:
                                      type: string
                                    vnid:
                                      type: string
                                  type: object
                              type: object
                            type: array
                          qosStatistics:
                            items:
                              properties:
                                classMapName:
                                  type: string
                                dropRate:
                                  type: integer
                                numBytes:
                                  type: integer
                                numPackets:
                                  type: integer
                                offeredRate:
                                  type: integer
                                queueBandwidthbps:
                                  type: string
                                queueDepth:
                                  type: integer
                                queueNoBufferDrops:
                                  type: integer
                                queueTotalDrops:
                                  type: integer
                                refreshedAt:
                                  type: integer
                              type: object
                            type: array
                          qosStatsCollection:
                            type: string
                          qosStatsCollectionFailureReason:
                            type: string
                          usedVlan:
                            type: string
                          vrfName:
                            type: string
                        type: object
                      type: array
                  type: object
                flexConnect:
                  properties:
                    authentication:
                      enum:
                      - LOCAL
                      - CENTRAL
                      type: string
                    dataSwitching:
                      enum:
                      - LOCAL
                      - CENTRAL
                      type: string
                    egressAclAnalysis:
                      properties:
                        aclName:
                          type: string
                        matchingAces:
                          items:
                            properties:
                              ace:
                                type: string
                              matchingPorts:
                                items:
                                  properties:
                                    ports:
                                      items:
                                        properties:
                                          destPorts:
                                            items:
                                              type: string
                                            type: array
                                          sourcePorts:
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      type: array
                                    protocol:
                                      type: string
                                  type: object
                                type: array
                              result:
                                type: string
                            type: object
                          type: array
                        result:
                          type: string
                      type: object
                    ingressAclAnalysis:
                      properties:
                        aclName:
                          type: string
                        matchingAces:
                          items:
                            properties:
                              ace:
                                type: string
                              matchingPorts:
                                items:
                                  properties:
                                    ports:
                                      items:
                                        properties:
                                          destPorts:
                                            items:
                                              type: string
                                            type: array
                                          sourcePorts:
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      type: array
                                    protocol:
                                      type: string
                                  type: object
                                type: array
                              result:
                                type: string
                            type: object
                          type: array
                        result:
                          type: string
                      type: object
                    wirelessLanControllerId:
                      type: string
                    wirelessLanControllerName:
                      type: string
                  type: object
                id:
                  type: string
                ingressInterface:
                  properties:
                    physicalInterface:
                      properties:
                        aclAnalysis:
                          properties:
                            aclName:
                              type: string
                            matchingAces:
                              items:
                                properties:
                                  ace:
                                    type: string
                                  matchingPorts:
                                    items:
                                      properties:
                                        ports:
                                          items:
                                            properties:
                                              destPorts:
                                                items:
                                                  type: string
                                                type: array
                                              sourcePorts:
                                                items:
                                                  type: string
                                                type: array
                                            type: object
                                          type: array
                                        protocol:
                                          type: string
                                      type: object
                                    type: array
                                  result:
                                    type: string
                                type: object
                              type: array
                            result:
                              type: string
                          type: object
                        id:
                          type: string
                        interfaceStatistics:
                          properties:
                            adminStatus:
                              type: string
                            inputPackets:
                              type: integer
                            inputQueueCount:
                              type: integer
                            inputQueueDrops:
                              type: integer
                            inputQueueFlushes:
                              type: integer
                            inputQueueMaxDepth:
                              type: integer
                            inputRatebps:
                              type: integer
                            operationalStatus:
                              type: string
                            outputDrop:
                              type: integer
                            outputPackets:
                              type: integer
                            outputQueueCount:
                              type: integer
                            outputQueueDepth:
                              type: integer
                            outputRatebps:
                              type: integer
                            refreshedAt:
                              type: integer
                          type: object
                        interfaceStatsCollection:
                          type: string
                        interfaceStatsCollectionFailureReason:
                          type: string
                        name:
                          type: string
                        pathOverlayInfo:
                          items:
                            properties:
                              controlPlane:
                                type: string
                              dataPacketEncapsulation:
                                type: string
                              destIp:
                                type: string
                              destPort:
                                type: string
                              protocol:
                                type: string
                              sourceIp:
                                type: string
                              sourcePort:
                                type: string
                              vxlanInfo:
                                properties:
                                  dscp:
                                    type: string
                                  vnid:
                                    type: string
                                type: object
                            type: object
                          type: array
                        qosStatistics:
                          items:
                            properties:
                              classMapName:
                                type: string
                              dropRate:
                                type: integer
                              numBytes:
                                type: integer
                              numPackets:
                                type: integer
                              offeredRate:
                                type: integer
                              queueBandwidthbps:
                                type: string
                              queueDepth:
                                type: integer
                              queueNoBufferDrops:
                                type: integer
                              queueTotalDrops:
                                type: integer
                              refreshedAt:
                                type: integer
                            type: object
                          type: array
                        qosStatsCollection:
                          type: string
                        qosStatsCollectionFailureReason:
                          type: string
                        usedVlan:
                          type: string
                        vrfName:
                          type: string
                      type: object
                    virtualInterface:
                      items:
                        properties:
                          aclAnalysis:
                            properties:
                              aclName:
                                type: string
                              matchingAces:
                                items:
                                  properties:
                                    ace:
                                      type: string
                                    matchingPorts:
                                      items:
                                        properties:
                                          ports:
                                            items:
                                              properties:
                                                destPorts:
                                                  items:
                                                    type: string
                                                  type: array
                                                sourcePorts:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          protocol:
                                            type: string
                                        type: object
                                      type: array
                                    result:
                                      type: string
                                  type: object
                                type: array
                              result:
                                type: string
                            type: object
                          id:
                            type: string
                          interfaceStatistics:
                            properties:
                              adminStatus:
                                type: string
                              inputPackets:
                                type: integer
                              inputQueueCount:
                                type: integer
                              inputQueueDrops:
                                type: integer
                              inputQueueFlushes:
                                type: integer
                              inputQueueMaxDepth:
                                type: integer
                              inputRatebps:
                                type: integer
                              operationalStatus:
                                type: string
                              outputDrop:
                                type: integer
                              outputPackets:
                                type: integer
                              outputQueueCount:
                                type: integer
                              outputQueueDepth:
                                type: integer
                              outputRatebps:
                                type: integer
                              refreshedAt:
                                type: integer
                            type: object
                          interfaceStatsCollection:
                            type: string
                          interfaceStatsCollectionFailureReason:
                            type: string
                          name:
                            type: string
                          pathOverlayInfo:
                            items:
                              properties:
                                controlPlane:
                                  type: string
                                dataPacketEncapsulation:
                                  type: string
                                destIp:
                                  type: string
                                destPort:
                                  type: string
                                protocol:
                                  type: string
                                sourceIp:
                                  type: string
                                sourcePort:
                                  type: string
                                vxlanInfo:
                                  properties:
                                    dscp:
                                      type: string
                                    vnid:
                                      type: string
                                  type: object
                              type: object
                            type: array
                          qosStatistics:
                            items:
                              properties:
                                classMapName:
                                  type: string
                                dropRate:
                                  type: integer
                                numBytes:
                                  type: integer
                                numPackets:
                                  type: integer
                                offeredRate:
                                  type: integer
                                queueBandwidthbps:
                                  type: string
                                queueDepth:
                                  type: integer
                                queueNoBufferDrops:
                                  type: integer
                                queueTotalDrops:
                                  type: integer
                                refreshedAt:
                                  type: integer
                              type: object
                            type: array
                          qosStatsCollection:
                            type: string
                          qosStatsCollectionFailureReason:
                            type: string
                          usedVlan:
                            type: string
                          vrfName:
                            type: string
                        type: object
                      type: array
                  type: object
                ip:
                  type: string
                linkInformationSource:
                  type: string
                name:
                  type: string
                perfMonCollection:
                  type: string
                perfMonCollectionFailureReason:
                  type: string
                perfMonitorStatistics:
                  items:
                    properties:
                      byteRate:
                        type: integer
                      destIpAddress:
                        type: string
                      destPort:
                        type: string
                      inputInterface:
                        type: string
                      ipv4DSCP:
                        type: string
                      ipv4TTL:
                        type: integer
                      outputInterface:
                        type: string
                      packetBytes:
                        type: integer
                      packetCount:
                        type: integer
                      packetLoss:
                        type: integer
                      packetLossPercentage:
                        type: number
                      protocol:
                        type: string
                      refreshedAt:
                        type: integer
                      rtpJitterMax:
                        type: integer
                      rtpJitterMean:
                        type: integer
                      rtpJitterMin:
                        type: integer
                      sourceIpAddress:
                        type: string
                      sourcePort:
                        type: string
                    type: object
                  type: array
                role:
                  type: string
                ssid:
                  type: string
                tunnels:
                  items:
                    type: string
                  type: array
                type:
                  type: string
                wlanId:
                  type: string
              type: object
            type: array
          properties:
            items:
              type: string
            type: array
          request:
            properties:
              controlPath:
                type: boolean
              createTime:
                type: integer
              destIP:
                type: string
              destPort:
                type: string
              failureReason:
                type: string
              id:
                type: string
              inclusions:
                items:
                  type: string
                type: array
              lastUpdateTime:
                type: integer
              periodicRefresh:
                type: boolean
              protocol:
                type: string
              sourceIP:
                type: string
              sourcePort:
                type: string
              status:
                type: string
            type: object
        type: object
      version:
        type: string
    type: object
  ProjectDTO:
    properties:
      createTime:
        type: integer
      description:
        type: string
      id:
        type: string
      lastUpdateTime:
        type: integer
      name:
        type: string
      tags:
        items:
          type: string
        type: array
      templates:
        type: object
    type: object
  ProvisionDeviceResponse:
    type: object
  PushProvisionRequest:
    properties:
      deviceIdList:
        items:
          type: string
        type: array
    type: object
  RawCliInfoNIOListResult:
    properties:
      response:
        items:
          properties:
            attributeInfo:
              properties: {}
              type: object
            cdpNeighbors:
              type: string
            healthMonitor:
              type: string
            id:
              type: string
            intfDescription:
              type: string
            inventory:
              type: string
            ipIntfBrief:
              type: string
            macAddressTable:
              type: string
            runningConfig:
              type: string
            snmp:
              type: string
            version:
              type: string
          type: object
        type: array
      version:
        type: string
    type: object
  RegisterNetworkDeviceResult:
    properties:
      response:
        properties:
          macAddress:
            type: string
          modelNumber:
            type: string
          name:
            type: string
          serialNumber:
            type: string
          tenantId:
            type: string
        type: object
      version:
        type: string
    type: object
  ResetDeviceResponse:
    type: object
  ResetRequest:
    properties:
      deviceResetList:
        items:
          properties:
            configList:
              items:
                properties:
                  configId:
                    type: string
                  configParameters:
                    items:
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                      type: object
                    type: array
                type: object
              type: array
            deviceId:
              type: string
            licenseLevel:
              type: string
            licenseType:
              type: string
            topOfStackSerialNumber:
              type: string
          type: object
        type: array
      projectId:
        type: string
      workflowId:
        type: string
    type: object
  RetrievesAllNetworkDevicesResponse:
    properties: {}
    type: object
  SAVAMapping:
    properties:
      autoSyncPeriod:
        type: integer
      ccoUser:
        type: string
      expiry:
        type: integer
      lastSync:
        type: integer
      profile:
        properties:
          addressFqdn:
            type: string
          addressIpV4:
            type: string
          cert:
            type: string
          makeDefault:
            type: boolean
          name:
            type: string
          port:
            type: integer
          profileId:
            type: string
          proxy:
            type: boolean
        type: object
      smartAccountId:
        type: string
      syncResult:
        properties:
          syncList:
            items:
              properties:
                deviceSnList:
                  items:
                    type: string
                  type: array
                syncType:
                  enum:
                  - Add
                  - Update
                  - Delete
                  - MismatchError
                  type: string
              type: object
            type: array
          syncMsg:
            type: string
        type: object
      syncResultStr:
        type: string
      syncStartTime:
        type: integer
      syncStatus:
        enum:
        - NOT_SYNCED
        - SYNCING
        - SUCCESS
        - FAILURE
        type: string
      tenantId:
        type: string
      token:
        type: string
      virtualAccountId:
        type: string
    type: object
  SNMPvCredentialDTO:
    items:
      properties:
        authPassword:
          type: string
        authType:
          enum:
          - SHA
          - MD5
          type: string
        comments:
          type: string
        credentialType:
          enum:
          - GLOBAL
          - APP
          type: string
        description:
          type: string
        id:
          type: string
        instanceTenantId:
          type: string
        instanceUuid:
          type: string
        privacyPassword:
          type: string
        privacyType:
          enum:
          - DES
          - AES128
          type: string
        snmpMode:
          enum:
          - AUTHPRIV
          - AUTHNOPRIV
          - NOAUTHNOPRIV
          type: string
        username:
          type: string
      type: object
    type: array
  SNMPvReadCommunityDTO:
    properties:
      comments:
        type: string
      credentialType:
        enum:
        - GLOBAL
        - APP
        type: string
      description:
        type: string
      id:
        type: string
      instanceTenantId:
        type: string
      instanceUuid:
        type: string
      readCommunity:
        type: string
    type: object
  SNMPvWriteCommunityDTO:
    items:
      properties:
        comments:
          type: string
        credentialType:
          enum:
          - GLOBAL
          - APP
          type: string
        description:
          type: string
        id:
          type: string
        instanceTenantId:
          type: string
        instanceUuid:
          type: string
        writeCommunity:
          type: string
      type: object
    type: array
  Settings:
    properties:
      _id:
        type: string
      aaaCredentials:
        properties:
          password:
            type: string
          username:
            type: string
        type: object
      acceptEula:
        type: boolean
      defaultProfile:
        properties:
          cert:
            type: string
          fqdnAddresses:
            items:
              type: string
            type: array
          ipAddresses:
            items:
              type: string
            type: array
          port:
            type: integer
          proxy:
            type: boolean
        type: object
      savaMappingList:
        items:
          properties:
            autoSyncPeriod:
              type: integer
            ccoUser:
              type: string
            expiry:
              type: integer
            lastSync:
              type: integer
            profile:
              properties:
                addressFqdn:
                  type: string
                addressIpV4:
                  type: string
                cert:
                  type: string
                makeDefault:
                  type: boolean
                name:
                  type: string
                port:
                  type: integer
                profileId:
                  type: string
                proxy:
                  type: boolean
              type: object
            smartAccountId:
              type: string
            syncResult:
              properties:
                syncList:
                  items:
                    properties:
                      deviceSnList:
                        items:
                          type: string
                        type: array
                      syncType:
                        enum:
                        - Add
                        - Update
                        - Delete
                        - MismatchError
                        type: string
                    type: object
                  type: array
                syncMsg:
                  type: string
              type: object
            syncResultStr:
              type: string
            syncStartTime:
              type: integer
            syncStatus:
              enum:
              - NOT_SYNCED
              - SYNCING
              - SUCCESS
              - FAILURE
              type: string
            tenantId:
              type: string
            token:
              type: string
            virtualAccountId:
              type: string
          type: object
        type: array
      taskTimeOuts:
        properties:
          configTimeOut:
            type: integer
          generalTimeOut:
            type: integer
          imageDownloadTimeOut:
            type: integer
        type: object
      tenantId:
        type: string
      version:
        type: integer
    type: object
  SiteHierarchyResponse:
    properties:
      response:
        items:
          properties:
            accessGoodCount:
              type: string
            accessTotalCount:
              type: string
            applicationBytesTotalCount:
              type: string
            applicationGoodCount:
              type: string
            applicationHealth:
              type: string
            applicationTotalCount:
              type: string
            clientHealthWired:
              type: string
            clientHealthWireless:
              type: string
            clientIssueCount:
              type: string
            clientNumberOfIssues:
              type: string
            coreGoodCount:
              type: string
            coreTotalCount:
              type: string
            distributionGoodCount:
              type: string
            distributionTotalCount:
              type: string
            healthyClientsPercentage:
              type: string
            healthyNetworkDevicePercentage:
              type: string
            networkHealthAccess:
              type: string
            networkHealthAverage:
              type: string
            networkHealthCore:
              type: string
            networkHealthDistribution:
              type: string
            networkHealthOthers:
              type: string
            networkHealthRouter:
              type: string
            networkHealthWireless:
              type: string
            networkNumberOfIssues:
              type: string
            numberOfClients:
              type: string
            numberOfNetworkDevice:
              type: string
            numberOfWiredClients:
              type: string
            numberOfWirelessClients:
              type: string
            overallGoodDevices:
              type: string
            parentSiteId:
              type: string
            parentSiteName:
              type: string
            routerGoodCount:
              type: string
            routerTotalCount:
              type: string
            siteId:
              type: string
            siteName:
              type: string
            siteType:
              type: string
            wiredGoodClients:
              type: string
            wirelessDeviceGoodCount:
              type: string
            wirelessDeviceTotalCount:
              type: string
            wirelessGoodClients:
              type: string
          type: object
        type: array
    type: object
  SiteResult:
    properties:
      response:
        properties:
          sites:
            items:
              properties:
                displayName:
                  type: string
                groupNameHierarchy:
                  type: string
                id:
                  type: string
                latitude:
                  type: string
                locationAddress:
                  type: string
                locationCountry:
                  type: string
                locationType:
                  type: string
                longitude:
                  type: string
                name:
                  type: string
                parentId:
                  type: string
              type: object
            type: array
        type: object
      version:
        type: string
    type: object
  SitesInfoDTO:
    properties:
      siteUuids:
        items:
          type: string
        type: array
    type: object
  SuccessResult:
    properties:
      response:
        type: string
      version:
        type: string
    type: object
  SuccessResultList:
    properties:
      response:
        items:
          type: string
        type: array
      version:
        type: string
    type: object
  SyncVirtualAccountDevicesResponse:
    type: object
  SystemPropertyListResult:
    properties:
      response:
        items:
          properties:
            id:
              type: string
            instanceTenantId:
              type: string
            instanceUuid:
              type: string
            intValue:
              type: integer
            systemPropertyName:
              type: string
          type: object
        type: array
      version:
        type: string
    type: object
  SystemPropertyNameAndIntValueDTO:
    items:
      properties:
        id:
          type: string
        instanceTenantId:
          type: string
        instanceUuid:
          type: string
        intValue:
          type: integer
        systemPropertyName:
          type: string
      type: object
    type: array
  TaskDTOListResponse:
    properties:
      response:
        items:
          properties:
            additionalStatusURL:
              type: string
            data:
              type: string
            endTime:
              type: string
            errorCode:
              type: string
            errorKey:
              type: string
            failureReason:
              type: string
            id:
              type: string
            instanceTenantId:
              type: string
            isError:
              type: boolean
            lastUpdate:
              type: string
            operationIdList:
              type: object
            parentId:
              type: string
            progress:
              type: string
            rootId:
              type: string
            serviceType:
              type: string
            startTime:
              type: string
            username:
              type: string
            version:
              type: integer
          type: object
        type: array
      version:
        type: string
    type: object
  TaskDTOResponse:
    properties:
      response:
        properties:
          additionalStatusURL:
            type: string
          data:
            type: string
          endTime:
            type: string
          errorCode:
            type: string
          errorKey:
            type: string
          failureReason:
            type: string
          id:
            type: string
          instanceTenantId:
            type: string
          isError:
            type: boolean
          lastUpdate:
            type: string
          operationIdList:
            type: object
          parentId:
            type: string
          progress:
            type: string
          rootId:
            type: string
          serviceType:
            type: string
          startTime:
            type: string
          username:
            type: string
          version:
            type: integer
        type: object
      version:
        type: string
    type: object
  TaskIdResult:
    properties:
      response:
        properties:
          taskId:
            type: object
          url:
            type: string
        type: object
      version:
        type: string
    type: object
  TemplateDTO:
    properties:
      author:
        type: string
      createTime:
        type: integer
      description:
        type: string
      deviceTypes:
        items:
          properties:
            productFamily:
              type: string
            productSeries:
              type: string
            productType:
              type: string
          type: object
        type: array
      id:
        type: string
      lastUpdateTime:
        type: integer
      name:
        type: string
      parentTemplateId:
        type: string
      projectId:
        type: string
      projectName:
        type: string
      rollbackTemplateContent:
        type: string
      rollbackTemplateParams:
        items:
          properties:
            dataType:
              enum:
              - STRING
              - INTEGER
              - IPADDRESS
              - MACADDRESS
              - SECTIONDIVIDER
              type: string
            defaultValue:
              type: string
            description:
              type: string
            displayName:
              type: string
            group:
              type: string
            id:
              type: string
            instructionText:
              type: string
            key:
              type: string
            order:
              type: integer
            parameterName:
              type: string
            provider:
              type: string
            range:
              items:
                properties:
                  id:
                    type: string
                  maxValue:
                    type: integer
                  minValue:
                    type: integer
                type: object
              type: array
            required:
              type: boolean
            selection:
              type: object
          type: object
        type: array
      softwareType:
        type: string
      softwareVariant:
        type: string
      softwareVersion:
        type: string
      tags:
        items:
          type: string
        type: array
      templateContent:
        type: string
      templateParams:
        items:
          properties:
            dataType:
              enum:
              - STRING
              - INTEGER
              - IPADDRESS
              - MACADDRESS
              - SECTIONDIVIDER
              type: string
            defaultValue:
              type: string
            description:
              type: string
            displayName:
              type: string
            group:
              type: string
            id:
              type: string
            instructionText:
              type: string
            key:
              type: string
            order:
              type: integer
            parameterName:
              type: string
            provider:
              type: string
            range:
              items:
                properties:
                  id:
                    type: string
                  maxValue:
                    type: integer
                  minValue:
                    type: integer
                type: object
              type: array
            required:
              type: boolean
            selection:
              type: object
          type: object
        type: array
      version:
        type: string
    type: object
  TemplateDeploymentInfo:
    properties:
      targetInfo:
        items:
          properties:
            hostName:
              type: string
            id:
              type: string
            params:
              properties: {}
              type: object
            type:
              enum:
              - MANAGED_DEVICE_IP
              - MANAGED_DEVICE_UUID
              - PRE_PROVISIONED_SERIAL
              - PRE_PROVISIONED_MAC
              - DEFAULT
              - MANAGED_DEVICE_HOSTNAME
              type: string
          type: object
        type: array
      templateId:
        type: string
    type: object
  TemplateDeploymentStatusDTO:
    properties:
      deploymentId:
        type: string
      deploymentName:
        type: string
      devices:
        items:
          properties:
            deviceId:
              type: string
            duration:
              type: string
            endTime:
              type: string
            ipAddress:
              type: string
            name:
              type: string
            startTime:
              type: string
            status:
              type: string
          type: object
        type: array
      duration:
        type: string
      endTime:
        type: string
      projectName:
        type: string
      startTime:
        type: string
      status:
        type: string
      templateName:
        type: string
      templateVersion:
        type: string
    type: object
  TemplatePreviewRequestDTO:
    properties:
      params:
        properties: {}
        type: object
      templateId:
        type: string
    type: object
  TemplatePreviewResponseDTO:
    properties:
      cliPreview:
        type: string
      templateId:
        type: string
    type: object
  TemplateVersionRequestDTO:
    properties:
      comments:
        type: string
      templateId:
        type: string
    type: object
  TopologyResult:
    properties:
      response:
        properties:
          id:
            type: string
          links:
            items:
              properties:
                additionalInfo:
                  properties: {}
                  type: object
                endPortID:
                  type: string
                endPortIpv4Address:
                  type: string
                endPortIpv4Mask:
                  type: string
                endPortName:
                  type: string
                endPortSpeed:
                  type: string
                greyOut:
                  type: boolean
                id:
                  type: string
                linkStatus:
                  type: string
                source:
                  type: string
                startPortID:
                  type: string
                startPortIpv4Address:
                  type: string
                startPortIpv4Mask:
                  type: string
                startPortName:
                  type: string
                startPortSpeed:
                  type: string
                tag:
                  type: string
                target:
                  type: string
              type: object
            type: array
          nodes:
            items:
              properties:
                aclApplied:
                  type: boolean
                additionalInfo:
                  properties: {}
                  type: object
                customParam:
                  properties:
                    id:
                      type: string
                    label:
                      type: string
                    parentNodeId:
                      type: string
                    x:
                      type: integer
                    y:
                      type: integer
                  type: object
                dataPathId:
                  type: string
                deviceType:
                  type: string
                family:
                  type: string
                fixed:
                  type: boolean
                greyOut:
                  type: boolean
                id:
                  type: string
                ip:
                  type: string
                label:
                  type: string
                networkType:
                  type: string
                nodeType:
                  type: string
                order:
                  type: integer
                osType:
                  type: string
                platformId:
                  type: string
                role:
                  type: string
                roleSource:
                  type: string
                softwareVersion:
                  type: string
                tags:
                  items:
                    type: string
                  type: array
                upperNode:
                  type: string
                userId:
                  type: string
                vlanId:
                  type: string
                x:
                  type: integer
                y:
                  type: integer
              type: object
            type: array
        type: object
      version:
        type: string
    type: object
  UnClaimDeviceResponse:
    type: object
  UnclaimRequest:
    properties:
      deviceIdList:
        items:
          type: string
        type: array
    type: object
  UpdateDeviceResponse:
    type: object
  UpdateSettingsResponse:
    type: object
  UpdateWorkflowResponse:
    type: object
  ViewSettingsResponse:
    type: object
  VlanListResult:
    properties:
      response:
        items:
          properties:
            interfaceName:
              type: string
            ipAddress:
              type: string
            mask:
              type: integer
            networkAddress:
              type: string
            numberOfIPs:
              type: integer
            prefix:
              type: string
            vlanNumber:
              type: integer
            vlanType:
              type: string
          type: object
        type: array
      version:
        type: string
    type: object
  VlanNamesResult:
    properties:
      response:
        items:
          type: string
        type: array
      version:
        type: string
    type: object
  WirelessInfoResult:
    properties:
      response:
        properties:
          adminEnabledPorts:
            items:
              type: integer
            type: array
          apGroupName:
            type: string
          deviceId:
            type: string
          ethMacAddress:
            type: string
          flexGroupName:
            type: string
          id:
            type: string
          instanceTenantId:
            type: string
          instanceUuid:
            type: string
          lagModeEnabled:
            type: boolean
          netconfEnabled:
            type: boolean
          wirelessLicenseInfo:
            enum:
            - ADVANTAGE
            - ESSENTIALS
            type: string
          wirelessPackageInstalled:
            type: boolean
        type: object
      version:
        type: string
    type: object
  Workflow:
    properties:
      _id:
        type: string
      addToInventory:
        type: boolean
      addedOn:
        type: integer
      configId:
        type: string
      currTaskIdx:
        type: integer
      description:
        type: string
      endTime:
        type: integer
      execTime:
        type: integer
      imageId:
        type: string
      lastupdateOn:
        type: integer
      name:
        type: string
      startTime:
        type: integer
      state:
        type: string
      tasks:
        items:
          properties:
            currWorkItemIdx:
              type: integer
            endTime:
              type: integer
            name:
              type: string
            startTime:
              type: integer
            state:
              type: string
            taskSeqNo:
              type: integer
            timeTaken:
              type: integer
            type:
              type: string
            workItemList:
              items:
                properties:
                  command:
                    type: string
                  endTime:
                    type: integer
                  outputStr:
                    type: string
                  startTime:
                    type: integer
                  state:
                    type: string
                  timeTaken:
                    type: integer
                type: object
              type: array
          type: object
        type: array
      tenantId:
        type: string
      type:
        type: string
      useState:
        type: string
      version:
        type: integer
    type: object
  response:
    type: object
info:
  description: REST API (EFT)
  license: Cisco DevNet
  licenseUrl: https://developer.cisco.com
  termsOfServiceUrl: http://www.cisco.com/web/siteassets/legal/terms_condition.html
  title: Cisco DNA Center Platform v. 1.2.x (EFT)
paths:
  /api/system/v1/auth/token:
    post:
      consumes:
      - application/json
      description: This method is used to generate token.
      operationId: ''
      produces:
      - application/json
      responses:
        '200':
          description: successful token generation
          schema:
            $ref: '#/definitions/GenerateTokenResponse'
        '401':
          description: invalid credentials.
      security:
      - basicAuth: []
      summary: Generate Token
      tags:
      - Authentication
  /api/system/v1/maglev/backup:
    get:
      description: Fetches the configured backup destination
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/BackupDetailResponse'
      summary: Configured Backup Destination
    post:
      description: Initiates a new backup job
      parameters:
      - description: Description of Backup point
        in: body
        name: Backup
        required: true
        schema:
          $ref: '#/definitions/Backup'
      responses:
        200:
          description: Success
          schema:
            type: object
      summary: Creates a new Backup Point
  /api/system/v1/maglev/backup/history:
    get:
      description: Fetches the backup history
      responses:
        200:
          description: Success
          schema:
            type: object
      summary: Backup History
  /api/system/v1/maglev/backup/progress:
    get:
      description: Fetches the backup progress
      responses:
        200:
          description: Success
          schema:
            type: object
      summary: Backup Progress
  /api/system/v1/maglev/backup/remote/settings:
    get:
      description: Fetches the configured backup destination
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/BackupRemote'
      summary: Configured Backup Destination
    put:
      description: Updates the remote backup server details
      parameters:
      - description: Bacup Remote Detais
        in: body
        name: BackupRemote
        required: true
        schema:
          $ref: '#/definitions/BackupRemote'
      responses:
        200:
          description: Success
          schema:
            type: object
      summary: Updates Backup Server details
  /api/system/v1/maglev/backup/{BackupId}:
    delete:
      description: Delete the restore point with given BackupId
      parameters:
      - description: UUID of Backup to restore
        in: path
        name: BackupId
        required: true
        type: string
      responses:
        200:
          description: Returns a version and response Id
          schema:
            type: object
      summary: Delete a restore point
  /api/system/v1/maglev/restore/{BackupId}:
    post:
      description: Initiate Restore of given BackupId
      parameters:
      - description: UUID of Backup to restore
        in: path
        name: BackupId
        required: true
        type: string
      responses:
        200:
          description: Returns a version and response Id
          schema:
            type: object
      summary: Initiate Restore
  /api/v1/discovery:
    delete:
      consumes:
      - application/json
      description: Stops all the discoveries and removes them
      operationId: ''
      parameters: []
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskIdResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Deletes all discovery
      tags:
      - Network Discovery
    post:
      consumes:
      - application/json
      description: Initiates discovery with the given parameters
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/InventoryRequest'
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskIdResult'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Starts a new discovery process and returns a task-id
      tags:
      - Network Discovery
    put:
      consumes:
      - application/json
      description: Stops or starts an existing discovery
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/DiscoveryNIO'
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskIdResult'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Updates an existing discovery specified by id - only for starting/stopping
        the discovery
      tags:
      - Network Discovery
  /api/v1/discovery/count:
    get:
      consumes:
      - application/json
      description: Gets the count of all available discovery jobs
      operationId: ''
      parameters: []
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/CountResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieves the number of discoveries
      tags:
      - Network Discovery
  /api/v1/discovery/job:
    get:
      consumes:
      - application/json
      description: Gets the list of discovery jobs for the given IP
      operationId: ''
      parameters:
      - description: offset
        in: query
        name: offset
        required: false
        type: integer
      - description: limit
        in: query
        name: limit
        required: false
        type: integer
      - description: ipAddress
        in: query
        name: ipAddress
        required: true
        type: string
      - description: name
        in: query
        name: name
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/DiscoveryJobNIOListResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieves the list of discovery jobs for the given IP
      tags:
      - Network Discovery
  /api/v1/discovery/{id}:
    delete:
      consumes:
      - application/json
      description: Stops the discovery for the given ID and removes it
      operationId: ''
      parameters:
      - description: Discovery ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskIdResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Deletes the discovery specified by id
      tags:
      - Network Discovery
    get:
      consumes:
      - application/json
      description: Gets discovery by ID
      operationId: ''
      parameters:
      - description: Discovery ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/DiscoveryNIOResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieves the discovery specified by id
      tags:
      - Network Discovery
  /api/v1/discovery/{id}/autoComplete:
    get:
      consumes:
      - application/json
      description: Gets the autoComplete values from a discovery job
      operationId: ''
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: taskId
        in: query
        name: taskId
        required: false
        type: string
      - description: ipAddress
        in: query
        name: ipAddress
        required: false
        type: string
      - description: pingStatus
        in: query
        name: pingStatus
        required: false
        type: string
      - description: snmpStatus
        in: query
        name: snmpStatus
        required: false
        type: string
      - description: cliStatus
        in: query
        name: cliStatus
        required: false
        type: string
      - description: netconfStatus
        in: query
        name: netconfStatus
        required: false
        type: string
      - description: httpStatus
        in: query
        name: httpStatus
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/SuccessResultList'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieve autoComplete values from a discovery based on id
      tags:
      - Network Discovery
  /api/v1/discovery/{id}/job:
    get:
      consumes:
      - application/json
      description: Gets the list of discovery jobs for the given id. The result can
        optionally be filtered based on IP
      operationId: ''
      parameters:
      - description: Discovery ID
        in: path
        name: id
        required: true
        type: string
      - description: offset
        in: query
        name: offset
        required: false
        type: integer
      - description: limit
        in: query
        name: limit
        required: false
        type: integer
      - description: ipAddress
        in: query
        name: ipAddress
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/DiscoveryJobNIOListResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieves list of discovery jobs for the specified discovery id
      tags:
      - Network Discovery
  /api/v1/discovery/{id}/network-device:
    get:
      consumes:
      - application/json
      description: Gets the network devices discovered for the given discovery
      operationId: ''
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: taskId
        in: query
        name: taskId
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/NetworkDeviceNIOListResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieves the network devices discovered in the discovery specified
        by id
      tags:
      - Network Discovery
  /api/v1/discovery/{id}/network-device/count:
    get:
      consumes:
      - application/json
      description: Gets the count of network devices discovered in the given discovery
      operationId: ''
      parameters:
      - description: Discovery ID
        in: path
        name: id
        required: true
        type: string
      - description: taskId
        in: query
        name: taskId
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/CountResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieves the number of network devices discovered in the discovery
        specified by id
      tags:
      - Network Discovery
  /api/v1/discovery/{id}/network-device/{startIndex}/{recordsToReturn}:
    get:
      consumes:
      - application/json
      description: Gets the network devices discovered for the given discovery and
        for the given range. The maximum number of records that could be retrieved
        is 500
      operationId: ''
      parameters:
      - description: Discovery ID
        in: path
        name: id
        required: true
        type: string
      - description: Start index
        in: path
        name: startIndex
        required: true
        type: integer
      - description: Number of records to return
        in: path
        name: recordsToReturn
        required: true
        type: integer
      - description: taskId
        in: query
        name: taskId
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/NetworkDeviceNIOListResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieves the range of network devices discovered for the given discovery
      tags:
      - Network Discovery
  /api/v1/discovery/{id}/summary:
    get:
      consumes:
      - application/json
      description: Gets the network devices from a discovery job based on given filters
      operationId: ''
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: taskId
        in: query
        name: taskId
        required: false
        type: string
      - description: sortBy
        in: query
        name: sortBy
        required: false
        type: string
      - description: sortOrder
        in: query
        name: sortOrder
        required: false
        type: string
      - description: ipAddress
        in: query
        items:
          type: string
        name: ipAddress
        required: false
        type: array
      - description: pingStatus
        in: query
        items:
          type: string
        name: pingStatus
        required: false
        type: array
      - description: snmpStatus
        in: query
        items:
          type: string
        name: snmpStatus
        required: false
        type: array
      - description: cliStatus
        in: query
        items:
          type: string
        name: cliStatus
        required: false
        type: array
      - description: netconfStatus
        in: query
        items:
          type: string
        name: netconfStatus
        required: false
        type: array
      - description: httpStatus
        in: query
        items:
          type: string
        name: httpStatus
        required: false
        type: array
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/CountResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieve network devices from a discovery on given filters
      tags:
      - Network Discovery
  /api/v1/discovery/{startIndex}/{recordsToDelete}:
    delete:
      consumes:
      - application/json
      description: Stops discovery for the given range and removes them
      operationId: ''
      parameters:
      - description: Start index
        in: path
        name: startIndex
        required: true
        type: integer
      - description: Number of records to delete
        in: path
        name: recordsToDelete
        required: true
        type: integer
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskIdResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Deletes the discovery in the given range
      tags:
      - Network Discovery
  /api/v1/discovery/{startIndex}/{recordsToReturn}:
    get:
      consumes:
      - application/json
      description: Gets the discovery for the range specified
      operationId: ''
      parameters:
      - description: Start index
        in: path
        name: startIndex
        required: true
        type: integer
      - description: Number of records to return
        in: path
        name: recordsToReturn
        required: true
        type: integer
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/DiscoveryNIOListResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieves the discovery in the given range
      tags:
      - Network Discovery
  /api/v1/file/namespace:
    get:
      consumes:
      - application/json
      description: This method is used to obtain a list of available namespaces
      operationId: ''
      parameters: []
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/NameSpaceListResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Returns list of available namespaces
      tags:
      - System
  /api/v1/file/namespace/{nameSpace}:
    get:
      consumes:
      - application/json
      description: This method is used to obtain a list of files under a specific
        namespace
      operationId: ''
      parameters:
      - description: A listing of fileId's
        in: path
        name: nameSpace
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/FileObjectListResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Returns list of files under a specific namespace
      tags:
      - System
  /api/v1/file/{fileId}:
    get:
      consumes:
      - application/json
      description: This method is used to download a file referred by the fileId
      operationId: ''
      parameters:
      - description: File Identification number
        in: path
        name: fileId
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/DownloadsAFileReferredByTheFileIdResponse'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Downloads a file referred by the fileId
      tags:
      - System
  /api/v1/flow-analysis:
    get:
      consumes:
      - application/json
      description: Retrieves a summary of all flow analyses stored. Filters the results
        by given parameters.
      operationId: ''
      parameters:
      - description: Is analysis periodically refreshed?
        in: query
        name: periodicRefresh
        required: false
        type: boolean
      - description: Source IP address
        in: query
        name: sourceIP
        required: false
        type: string
      - description: Destination IP adress
        in: query
        name: destIP
        required: false
        type: string
      - description: Source port
        in: query
        name: sourcePort
        required: false
        type: string
      - description: Destination port
        in: query
        name: destPort
        required: false
        type: string
      - description: Analyses requested after this time
        in: query
        name: gtCreateTime
        required: false
        type: string
      - description: Analyses requested before this time
        in: query
        name: ltCreateTime
        required: false
        type: string
      - description: Protocol
        in: query
        name: protocol
        required: false
        type: string
      - description: Status
        in: query
        name: status
        required: false
        type: string
      - description: Task ID
        in: query
        name: taskId
        required: false
        type: string
      - description: Last update time
        in: query
        name: lastUpdateTime
        required: false
        type: string
      - description: Number of resources returned
        in: query
        name: limit
        required: false
        type: string
      - description: Start index of resources returned (1-based)
        in: query
        name: offset
        required: false
        type: string
      - description: Order by this field
        in: query
        name: order
        required: false
        type: string
      - description: Sort by this field
        in: query
        name: sortBy
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/FlowAnalysisListOutput'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: No correspoding flow analysis result for requested Id
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieves a summary of all flow analyses stored
      tags:
      - Path Trace
    post:
      consumes:
      - application/json
      description: Initiates a new flow analysis with periodic refresh and stat collection
        options. Returns a request id and a task id to get results and follow progress.
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/FlowAnalysisRequest'
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/FlowAnalysisRequestResultOutput'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Initiates a new flow analysis
      tags:
      - Path Trace
  /api/v1/flow-analysis/{flowAnalysisId}:
    delete:
      consumes:
      - application/json
      description: Deletes a flow analysis request by its id
      operationId: ''
      parameters:
      - description: Flow analysis request id
        in: path
        name: flowAnalysisId
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskIdResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Deletes a flow analysis request
      tags:
      - Path Trace
    get:
      consumes:
      - application/json
      description: Retrieves result of a previously requested flow analysis by its
        Flow Analysis id
      operationId: ''
      parameters:
      - description: Flow analysis request id
        in: path
        name: flowAnalysisId
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/PathResponseResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: No correspoding flow analysis result for requested Id
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieves result of a previously requested flow analysis
      tags:
      - Path Trace
  /api/v1/global-credential:
    get:
      consumes:
      - application/json
      description: This method is used to get global credential for the given credential
        sub type
      operationId: ''
      parameters:
      - description: Credential type as CLI / SNMPV2_READ_COMMUNITY / SNMPV2_WRITE_COMMUNITY
          / SNMPV3 / HTTP_WRITE / HTTP_READ / NETCONF
        in: query
        name: credentialSubType
        required: false
        type: string
      - description: sortBy
        in: query
        name: sortBy
        required: false
        type: string
      - description: order
        in: query
        name: order
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/GlobalCredentialListResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieves global credential for the given credential sub type
      tags:
      - Network Discovery
  /api/v1/global-credential/cli:
    post:
      consumes:
      - application/json
      description: This method is used to add global CLI credential
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/CLICredentialDTO'
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskIdResult'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Creates global CLI credential
      tags:
      - Network Discovery
    put:
      consumes:
      - application/json
      description: This method is used to update global CLI credential
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/CLICredentialDTO'
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskIdResult'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Updates global CLI credential
      tags:
      - Network Discovery
  /api/v1/global-credential/http-read:
    post:
      consumes:
      - application/json
      description: This method is used to add HTTP read credentials
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/HTTPReadCredentialDTO'
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskIdResult'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Creates global HTTP read credentials
      tags:
      - Network Discovery
    put:
      consumes:
      - application/json
      description: This method is used to update global HTTP Read credential
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/HTTPReadCredentialDTO'
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskIdResult'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Updates global HTTP Read credential
      tags:
      - Network Discovery
  /api/v1/global-credential/http-write:
    post:
      consumes:
      - application/json
      description: This method is used to add global HTTP write credentials
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/HTTPWriteCredentialDTO'
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskIdResult'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Creates global HTTP write credentials
      tags:
      - Network Discovery
    put:
      consumes:
      - application/json
      description: This method is used to update global HTTP Write credential
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/HTTPWriteCredentialDTO'
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskIdResult'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Updates global HTTP Write credential
      tags:
      - Network Discovery
  /api/v1/global-credential/netconf:
    post:
      consumes:
      - application/json
      description: This method is used to add global netconf credential
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/NetconfCredentialDTO'
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskIdResult'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Creates global netconf credential
      tags:
      - Network Discovery
    put:
      consumes:
      - application/json
      description: This method is used to update global netconf credential
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/NetconfCredentialDTO'
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskIdResult'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Updates global netconf credential
      tags:
      - Network Discovery
  /api/v1/global-credential/snmpv2-read-community:
    post:
      consumes:
      - application/json
      description: This method is used to add global SNMP read community
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/SNMPvReadCommunityDTO'
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskIdResult'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Creates global SNMP read community
      tags:
      - Network Discovery
    put:
      consumes:
      - application/json
      description: This method is used to update global SNMP read community
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/SNMPvReadCommunityDTO'
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskIdResult'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Updates global SNMP read community
      tags:
      - Network Discovery
  /api/v1/global-credential/snmpv2-write-community:
    post:
      consumes:
      - application/json
      description: This method is used to add global SNMP write community
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/SNMPvWriteCommunityDTO'
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskIdResult'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Creates global SNMP write community
      tags:
      - Network Discovery
    put:
      consumes:
      - application/json
      description: This method is used to update global SNMP write community
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/SNMPvWriteCommunityDTO'
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskIdResult'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Updates global SNMP write community
      tags:
      - Network Discovery
  /api/v1/global-credential/snmpv3:
    post:
      consumes:
      - application/json
      description: This method is used to add global SNMPv3 credential
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/SNMPvCredentialDTO'
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskIdResult'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Creates global SNMPv3 credential
      tags:
      - Network Discovery
    put:
      consumes:
      - application/json
      description: This method is used to update global SNMPv3 credential
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/SNMPvCredentialDTO'
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskIdResult'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Updates global SNMPv3 credential
      tags:
      - Network Discovery
  /api/v1/global-credential/{globalCredentialId}:
    delete:
      consumes:
      - application/json
      description: This method is used to delete global credential for the given ID
      operationId: ''
      parameters:
      - description: ID of global-credential
        in: path
        name: globalCredentialId
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskIdResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieves global credential by ID
      tags:
      - Network Discovery
    put:
      consumes:
      - application/json
      description: Update global credential for network devices in site(s)
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/SitesInfoDTO'
      - description: Global credential Uuid
        in: path
        name: globalCredentialId
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskIdResult'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Update global credential for network devices in site(s)
      tags:
      - Network Discovery
  /api/v1/global-credential/{id}:
    get:
      consumes:
      - application/json
      description: This method is used to get credential sub type for the given Id
      operationId: ''
      parameters:
      - description: Global Credential ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/GlobalCredentialSubTypeResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieves credential sub type for the given credential Id
      tags:
      - Network Discovery
  /api/v1/group:
    get:
      description: Returns the Site groups.
      parameters:
      - description: groupName (Optional)
        in: query
        name: groupName
        required: false
        type: string
      - description: groupType (Optional)
        in: query
        name: groupType
        required: false
        type: string
      - description: field (Optional)
        in: query
        name: field
        required: false
        type: string
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/response'
      summary: Returns the Site groups
  /api/v1/group/count:
    get:
      description: Returns the Site groups.
      parameters:
      - description: groupName (Optional)
        in: query
        name: groupType
        required: false
        type: string
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/response'
      summary: Returns the Site groups
  /api/v1/group{groupId}:
    delete:
      description: Deletes a group from DNAC
      parameters:
      - description: UID of group to delete
        in: path
        name: groupId
        required: true
        type: string
      responses:
        204:
          description: Group deleted
          schema:
            type: object
      summary: Deletes a group from DNAC
  /api/v1/image/activation/device:
    post:
      consumes:
      - application/json
      description: Performs activation of an image on a given device.
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/ActivateDTO'
      - description: Client-type (Optional)
        in: header
        name: Client-Type
        required: false
        type: string
      - description: Client-url (Optional)
        in: header
        name: Client-Url
        required: false
        type: string
      - description: scheduleValidate, validates data before schedule (Optional)
        in: query
        name: scheduleValidate
        required: false
        type: boolean
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskIdResult'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Trigger activation on a device
      tags:
      - SWIM
  /api/v1/image/distribution:
    post:
      consumes:
      - application/json
      description: Performs distribution of an image to a given device.
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/DistributeDTO'
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskIdResult'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Trigger distribution of an image
      tags:
      - SWIM
  /api/v1/image/importation:
    get:
      consumes:
      - application/json
      description: 'Get image details based on filter criteria, use % for like operations.
        Example: filterByName = cat3k%'
      operationId: ''
      parameters:
      - description: imageUuid
        in: query
        name: imageUuid
        required: false
        type: string
      - description: name
        in: query
        name: name
        required: false
        type: string
      - description: family
        in: query
        name: family
        required: false
        type: string
      - description: applicationType
        in: query
        name: applicationType
        required: false
        type: string
      - description: imageIntegrityStatus - FAILURE, UNKNOWN, VERIFIED
        in: query
        name: imageIntegrityStatus
        required: false
        type: string
      - description: software Image Version
        in: query
        name: version
        required: false
        type: string
      - description: image Series
        in: query
        name: imageSeries
        required: false
        type: string
      - description: image Name
        in: query
        name: imageName
        required: false
        type: string
      - description: is Tagged Golden
        in: query
        name: isTaggedGolden
        required: false
        type: boolean
      - description: is recommended from cisco.com
        in: query
        name: isCCORecommended
        required: false
        type: boolean
      - description: is latest from cisco.com
        in: query
        name: isCCOLatest
        required: false
        type: boolean
      - description: time in milliseconds (epoch format)
        in: query
        name: createdTime
        required: false
        type: integer
      - description: size in bytes
        in: query
        name: imageSizeGreaterThan
        required: false
        type: integer
      - description: size in bytes
        in: query
        name: imageSizeLesserThan
        required: false
        type: integer
      - description: sort results by this field
        in: query
        name: sortBy
        required: false
        type: string
      - description: sort order - 'asc' or 'des'. Default is asc
        in: query
        name: sortOrder
        required: false
        type: string
      - description: limit
        in: query
        name: limit
        required: false
        type: integer
      - description: offset
        in: query
        name: offset
        required: false
        type: integer
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/ImageInfoListResponse'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Get image details with filter
      tags:
      - SWIM
  /api/v1/image/importation/source/file:
    post:
      consumes:
      - application/json
      description: Imports an image to SWIM image repository from local file system.
        The image files with extensions bin, img, tar, smu, pie, aes, iso, ova, tar_gz
        and qcow2 are supported. Set siteUuid as -1 to tag as golden image.
      operationId: ''
      parameters:
      - description: Third party Image check
        in: query
        name: isThirdParty
        required: false
        type: boolean
      - description: Third Party Vendor
        in: query
        name: thirdPartyVendor
        required: false
        type: string
      - description: Third Party image family
        in: query
        name: thirdPartyImageFamily
        required: false
        type: string
      - description: Third Party Application Type
        in: query
        name: thirdPartyApplicationType
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskIdResult'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Import an image from local file system
      tags:
      - SWIM
  /api/v1/image/importation/source/url:
    post:
      consumes:
      - application/json
      description: Imports an image to SWIM image repository, source is any ftp or
        http URL. The image files with extensions bin, img, tar, smu, pie, aes, iso,
        ova, tar_gz and qcow2 are supported. Set siteUuid as -1 to tag as golden image.
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/ImageImportFromUrlDTO'
      - description: 'Epoch Time (The number of milli-seconds since January 1 1970
          UTC) at which the distribution should be scheduled (Optional) '
        in: query
        name: scheduleAt
        required: false
        type: string
      - description: Custom Description (Optional)
        in: query
        name: scheduleDesc
        required: false
        type: string
      - description: Originator of this call (Optional)
        in: query
        name: scheduleOrigin
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskIdResult'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Trigger now or schedule import of an image from a URL
      tags:
      - SWIM
  /api/v1/interface:
    get:
      consumes:
      - application/json
      description: Gets all available interfaces with a maximum limit of 500
      operationId: ''
      parameters: []
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/DeviceIfListResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieves all interfaces
      tags:
      - Network Device
  /api/v1/interface/count:
    get:
      consumes:
      - application/json
      description: Gets the count of interfaces for all devices
      operationId: ''
      parameters: []
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/CountResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieves interface count
      tags:
      - Network Device
  /api/v1/interface/ip-address/{ipAddress}:
    get:
      consumes:
      - application/json
      description: Gets list of interfaces with the given IP address
      operationId: ''
      parameters:
      - description: IP address of the interface
        in: path
        name: ipAddress
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/DeviceIfListResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieves interfaces by IP address
      tags:
      - Network Device
  /api/v1/interface/isis:
    get:
      consumes:
      - application/json
      description: Gets the interfaces that has ISIS enabled
      operationId: ''
      parameters: []
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/DeviceIfListResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieves ISIS interfaces
      tags:
      - Network Device
  /api/v1/interface/network-device/{deviceId}:
    get:
      consumes:
      - application/json
      description: Gets list of interfaces for the given device
      operationId: ''
      parameters:
      - description: Device ID
        in: path
        name: deviceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/DeviceIfListResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieves device interfaces
      tags:
      - Network Device
  /api/v1/interface/network-device/{deviceId}/count:
    get:
      consumes:
      - application/json
      description: Gets the interface count for the given device
      operationId: ''
      parameters:
      - description: Device ID
        in: path
        name: deviceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/CountResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieves device interface count
      tags:
      - Network Device
  /api/v1/interface/network-device/{deviceId}/interface-name:
    get:
      consumes:
      - application/json
      description: Gets the interface for the given device ID and for the given interface
        name
      operationId: ''
      parameters:
      - description: Device ID
        in: path
        name: deviceId
        required: true
        type: string
      - description: Interface name
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/DeviceIfResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieves interface for the given device and interface name
      tags:
      - Network Device
  /api/v1/interface/network-device/{deviceId}/{startIndex}/{recordsToReturn}:
    get:
      consumes:
      - application/json
      description: Gets the list of interfaces for the device for the specified range
      operationId: ''
      parameters:
      - description: Device ID
        in: path
        name: deviceId
        required: true
        type: string
      - description: Start index
        in: path
        name: startIndex
        required: true
        type: integer
      - description: Number of records to return
        in: path
        name: recordsToReturn
        required: true
        type: integer
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/DeviceIfListResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieves device interfaces in the given range
      tags:
      - Network Device
  /api/v1/interface/ospf:
    get:
      consumes:
      - application/json
      description: Gets the interfaces that has OSPF enabled
      operationId: ''
      parameters: []
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/DeviceIfListResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieves OSPF interfaces
      tags:
      - Network Device
  /api/v1/interface/{id}:
    get:
      consumes:
      - application/json
      description: Gets the interface for the given interface ID
      operationId: ''
      parameters:
      - description: Interface ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/DeviceIfResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieves interface by ID
      tags:
      - Network Device
  /api/v1/network-device:
    get:
      consumes:
      - application/json
      description: Gets the list of first 500 network devices sorted lexicographically
        based on host name. It can be filtered using management IP address, mac address,
        hostname and location name. If id param is provided, it will be returning
        the list of network-devices for the given id's and other request params will
        be ignored. In case of autocomplete request, returns the list of specified
        attributes.
      operationId: ''
      parameters:
      - description: hostname
        in: query
        items:
          type: string
        name: hostname
        required: false
        type: array
      - description: managementIpAddress
        in: query
        items:
          type: string
        name: managementIpAddress
        required: false
        type: array
      - description: macAddress
        in: query
        items:
          type: string
        name: macAddress
        required: false
        type: array
      - description: locationName
        in: query
        items:
          type: string
        name: locationName
        required: false
        type: array
      - description: serialNumber
        in: query
        items:
          type: string
        name: serialNumber
        required: false
        type: array
      - description: location
        in: query
        items:
          type: string
        name: location
        required: false
        type: array
      - description: family
        in: query
        items:
          type: string
        name: family
        required: false
        type: array
      - description: type
        in: query
        items:
          type: string
        name: type
        required: false
        type: array
      - description: series
        in: query
        items:
          type: string
        name: series
        required: false
        type: array
      - description: collectionStatus
        in: query
        items:
          type: string
        name: collectionStatus
        required: false
        type: array
      - description: collectionInterval
        in: query
        items:
          type: string
        name: collectionInterval
        required: false
        type: array
      - description: notSyncedForMinutes
        in: query
        items:
          type: string
        name: notSyncedForMinutes
        required: false
        type: array
      - description: errorCode
        in: query
        items:
          type: string
        name: errorCode
        required: false
        type: array
      - description: errorDescription
        in: query
        items:
          type: string
        name: errorDescription
        required: false
        type: array
      - description: softwareVersion
        in: query
        items:
          type: string
        name: softwareVersion
        required: false
        type: array
      - description: softwareType
        in: query
        items:
          type: string
        name: softwareType
        required: false
        type: array
      - description: platformId
        in: query
        items:
          type: string
        name: platformId
        required: false
        type: array
      - description: role
        in: query
        items:
          type: string
        name: role
        required: false
        type: array
      - description: reachabilityStatus
        in: query
        items:
          type: string
        name: reachabilityStatus
        required: false
        type: array
      - description: upTime
        in: query
        items:
          type: string
        name: upTime
        required: false
        type: array
      - description: associatedWlcIp
        in: query
        items:
          type: string
        name: associatedWlcIp
        required: false
        type: array
      - description: licenseName
        in: query
        items:
          type: string
        name: license.name
        required: false
        type: array
      - description: licenseType
        in: query
        items:
          type: string
        name: license.type
        required: false
        type: array
      - description: licenseStatus
        in: query
        items:
          type: string
        name: license.status
        required: false
        type: array
      - description: moduleName
        in: query
        items:
          type: string
        name: module+name
        required: false
        type: array
      - description: moduleEqupimentType
        in: query
        items:
          type: string
        name: module+equpimenttype
        required: false
        type: array
      - description: moduleServiceState
        in: query
        items:
          type: string
        name: module+servicestate
        required: false
        type: array
      - description: moduleVendorEquipmentType
        in: query
        items:
          type: string
        name: module+vendorequipmenttype
        required: false
        type: array
      - description: modulePartNumber
        in: query
        items:
          type: string
        name: module+partnumber
        required: false
        type: array
      - description: moduleOperationStateCode
        in: query
        items:
          type: string
        name: module+operationstatecode
        required: false
        type: array
      - description: Accepts comma separated id's and return list of network-devices
          for the given id's. If invalid or not-found id's are provided, null entry
          will be returned in the list.
        in: query
        name: id
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/NetworkDeviceListResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieves all network devices
      tags:
      - Network Device
    post:
      consumes:
      - application/json
      description: Adds the device with given credential
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/InventoryDeviceInfo'
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskIdResult'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Network device POST api
      tags:
      - Network Device
    put:
      consumes:
      - application/json
      description: Sync the devices provided as input
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/InventoryDeviceInfo'
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskIdResult'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Network device sync api
      tags:
      - Network Device
  /api/v1/network-device-poller/cli/legit-reads:
    get:
      consumes:
      - application/json
      description: Get valid keywords
      operationId: ''
      parameters: []
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/LegitCliKeyResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Get all keywords of CLIs accepted by command runner
      tags:
      - Command Runner
  /api/v1/network-device-poller/cli/read-request:
    post:
      consumes:
      - application/json
      description: Submit request for read-only CLIs
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/CommandRunnerDTO'
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskIdResult'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Run read-only commands on devices to get their real-time configuration
      tags:
      - Command Runner
  /api/v1/network-device/autocomplete:
    get:
      consumes:
      - application/json
      description: Gets the list of first 500 network devices sorted lexicographically
        based on host name. It can be filtered using management IP address, mac address,
        hostname and location name. If id param is provided, it will be returning
        the list of network-devices for the given id's and other request params will
        be ignored. In case of autocomplete request, returns the list of specified
        attributes.
      operationId: ''
      parameters:
      - description: vrfName
        in: query
        name: vrfName
        required: false
        type: string
      - description: managementIpAddress
        in: query
        name: managementIpAddress
        required: false
        type: string
      - description: hostname
        in: query
        name: hostname
        required: false
        type: string
      - description: macAddress
        in: query
        name: macAddress
        required: false
        type: string
      - description: family
        in: query
        name: family
        required: false
        type: string
      - description: collectionStatus
        in: query
        name: collectionStatus
        required: false
        type: string
      - description: collectionInterval
        in: query
        name: collectionInterval
        required: false
        type: string
      - description: softwareVersion
        in: query
        name: softwareVersion
        required: false
        type: string
      - description: softwareType
        in: query
        name: softwareType
        required: false
        type: string
      - description: reachabilityStatus
        in: query
        name: reachabilityStatus
        required: false
        type: string
      - description: reachabilityFailureReason
        in: query
        name: reachabilityFailureReason
        required: false
        type: string
      - description: errorCode
        in: query
        name: errorCode
        required: false
        type: string
      - description: platformId
        in: query
        name: platformId
        required: false
        type: string
      - description: series
        in: query
        name: series
        required: false
        type: string
      - description: type
        in: query
        name: type
        required: false
        type: string
      - description: serialNumber
        in: query
        name: serialNumber
        required: false
        type: string
      - description: upTime
        in: query
        name: upTime
        required: false
        type: string
      - description: role
        in: query
        name: role
        required: false
        type: string
      - description: roleSource
        in: query
        name: roleSource
        required: false
        type: string
      - description: associatedWlcIp
        in: query
        name: associatedWlcIp
        required: false
        type: string
      - description: offset
        in: query
        name: offset
        required: false
        type: string
      - description: limit
        in: query
        name: limit
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/RetrievesAllNetworkDevicesResponse'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieves all network devices
      tags:
      - Network Device
  /api/v1/network-device/brief:
    put:
      consumes:
      - application/json
      description: Updates the role of the device as access, core, distribution, border
        router
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/NetworkDeviceBriefNIO'
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskIdResult'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Updates network device role
      tags:
      - Network Device
  /api/v1/network-device/collection-schedule/global:
    get:
      consumes:
      - application/json
      description: Retrieves collection interval of all devices
      operationId: ''
      parameters: []
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/CountResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieves the collection interval of all devices
      tags:
      - Network Device
  /api/v1/network-device/config:
    get:
      consumes:
      - application/json
      description: Gets the config for all devices
      operationId: ''
      parameters: []
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/RawCliInfoNIOListResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieves device config list
      tags:
      - Network Device
  /api/v1/network-device/config/count:
    get:
      consumes:
      - application/json
      description: Gets the count of device configs
      operationId: ''
      parameters: []
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/CountResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieves config count
      tags:
      - Network Device
  /api/v1/network-device/count:
    get:
      consumes:
      - application/json
      description: Gets the count of network devices filtered by management IP address,
        mac address, hostname and location name
      operationId: ''
      parameters: []
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/CountResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieves network device count
      tags:
      - Network Device
  /api/v1/network-device/file:
    post:
      consumes:
      - application/json
      description: Export the selected network-device to a file
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/ExportDeviceDTO'
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskIdResult'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Export network-device to file
      tags:
      - Network Device
  /api/v1/network-device/functional-capability:
    get:
      consumes:
      - application/json
      description: Gets the functional-capability for given devices
      operationId: ''
      parameters:
      - description: Accepts comma separated deviceid's and return list of functional-capabilities
          for the given id's. If invalid or not-found id's are provided, null entry
          will be returned in the list.
        in: query
        name: deviceId
        required: false
        type: string
      - description: functionName
        in: query
        items:
          type: string
        name: functionName
        required: false
        type: array
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/FunctionalCapabilityListResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieves all functional-capability of devices
      tags:
      - Network Device
  /api/v1/network-device/functional-capability/autocomplete:
    get:
      consumes:
      - application/json
      description: Gets the field values based on given filter
      operationId: ''
      parameters:
      - description: functionName
        in: query
        items:
          type: string
        name: functionName
        required: false
        type: array
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/SuccessResultList'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieve the values of given fields
      tags:
      - Network Device
  /api/v1/network-device/functional-capability/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve functional capability with given id
      operationId: ''
      parameters:
      - description: Device ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/FunctionalCapabilityResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Gets the functional capability by id
      tags:
      - Network Device
  /api/v1/network-device/ip-address/{ipAddress}:
    get:
      consumes:
      - application/json
      description: Gets the network device with the given IP address
      operationId: ''
      parameters:
      - description: Device IP address
        in: path
        name: ipAddress
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/NetworkDeviceResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieves network device by IP address
      tags:
      - Network Device
  /api/v1/network-device/module:
    get:
      consumes:
      - application/json
      description: Get modules of the given device id
      operationId: ''
      parameters:
      - description: deviceId
        in: query
        name: deviceId
        required: true
        type: string
      - description: limit
        in: query
        name: limit
        required: false
        type: string
      - description: offset
        in: query
        name: offset
        required: false
        type: string
      - description: nameList
        in: query
        items:
          type: string
        name: nameList
        required: false
        type: array
      - description: vendorEquipmentTypeList
        in: query
        items:
          type: string
        name: vendorEquipmentTypeList
        required: false
        type: array
      - description: partNumberList
        in: query
        items:
          type: string
        name: partNumberList
        required: false
        type: array
      - description: operationalStateCodeList
        in: query
        items:
          type: string
        name: operationalStateCodeList
        required: false
        type: array
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/ModuleListResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Gives all the modules associated with given device id
      tags:
      - Network Device
  /api/v1/network-device/module/count:
    get:
      consumes:
      - application/json
      description: Get Module Count
      operationId: ''
      parameters:
      - description: deviceId
        in: query
        name: deviceId
        required: true
        type: string
      - description: nameList
        in: query
        items:
          type: string
        name: nameList
        required: false
        type: array
      - description: vendorEquipmentTypeList
        in: query
        items:
          type: string
        name: vendorEquipmentTypeList
        required: false
        type: array
      - description: partNumberList
        in: query
        items:
          type: string
        name: partNumberList
        required: false
        type: array
      - description: operationalStateCodeList
        in: query
        items:
          type: string
        name: operationalStateCodeList
        required: false
        type: array
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/CountResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Gives total number of Modules
      tags:
      - Network Device
  /api/v1/network-device/module/{id}:
    get:
      consumes:
      - application/json
      description: Get module by id
      operationId: ''
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/ModuleResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Gives Module info by its id
      tags:
      - Network Device
  /api/v1/network-device/serial-number/{serialNumber}:
    get:
      consumes:
      - application/json
      description: Gets the network device with the given serial number
      operationId: ''
      parameters:
      - description: Device serial number
        in: path
        name: serialNumber
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/NetworkDeviceResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieves network device by serial number
      tags:
      - Network Device
  /api/v1/network-device/sync:
    put:
      consumes:
      - application/json
      description: Sync's the devices. If forceSync param is false (default) then
        the sync would run in normal priority thread. If forceSync param is true then
        the sync would run in high priority thread if avaiable, else the sync will
        fail. Result can be seen in the child task of each device
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/NetworkDeviceSyncApiRequest'
      - description: forceSync
        in: query
        name: forceSync
        required: false
        type: boolean
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskIdResult'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Network device sync api
      tags:
      - Network Device
  /api/v1/network-device/tenantinfo/macaddress:
    get:
      consumes:
      - application/json
      description: Registers a device for WSA notification
      operationId: ''
      parameters:
      - description: Serial number of the device
        in: query
        name: serialNumber
        required: false
        type: string
      - description: Mac addres of the device
        in: query
        name: macaddress
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/RegisterNetworkDeviceResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Updates certificate validation status and returns tenantId
      tags:
      - Network Device
  /api/v1/network-device/{id}:
    delete:
      consumes:
      - application/json
      description: Removes the network device for the given ID
      operationId: ''
      parameters:
      - description: Device ID
        in: path
        name: id
        required: true
        type: string
      - description: isForceDelete
        in: query
        name: isForceDelete
        required: false
        type: boolean
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskIdResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Delete network device by ID
      tags:
      - Network Device
    get:
      consumes:
      - application/json
      description: Gets the network device for the given device ID
      operationId: ''
      parameters:
      - description: Device ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/NetworkDeviceResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieves network device by ID
      tags:
      - Network Device
  /api/v1/network-device/{id}/brief:
    get:
      consumes:
      - application/json
      description: Gets brief network device info such as hostname, management IP
        address for the given device ID
      operationId: ''
      parameters:
      - description: Device ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/NetworkDeviceBriefNIOResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieves network device brief by ID
      tags:
      - Network Device
  /api/v1/network-device/{id}/collection-schedule:
    get:
      consumes:
      - application/json
      description: Retrieves collection interval by device id
      operationId: ''
      parameters:
      - description: Device ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/CountResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieves the collection interval specified by device ID
      tags:
      - Network Device
  /api/v1/network-device/{id}/meraki-organization:
    get:
      consumes:
      - application/json
      description: This method is used to get the selected organizations for the meraki
        dashboard
      operationId: ''
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/SuccessResultList'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Get the organizations chosen while adding the meraki dashboard
      tags:
      - Network Device
  /api/v1/network-device/{id}/vlan:
    get:
      consumes:
      - application/json
      description: getDeviceVLANData
      operationId: ''
      parameters:
      - description: deviceUUID
        in: path
        name: id
        required: true
        type: string
      - description: Vlan assocaited with sub-interface
        in: query
        name: interfaceType
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/VlanListResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieves list of VLAN data that are associated with interface for
        a device
      tags:
      - Network Device
  /api/v1/network-device/{id}/wireless-info:
    get:
      consumes:
      - application/json
      description: Gets the wireless lan controller info using the given device ID
      operationId: ''
      parameters:
      - description: Device ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/WirelessInfoResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieves wireless lan conrtoller info by Device ID
      tags:
      - Network Device
  /api/v1/network-device/{networkDeviceId}/config:
    get:
      consumes:
      - application/json
      description: Gets the device config by device ID
      operationId: ''
      parameters:
      - description: networkDeviceId
        in: path
        name: networkDeviceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/SuccessResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieves device config
      tags:
      - Network Device
  /api/v1/network-device/{startIndex}/{recordsToReturn}:
    get:
      consumes:
      - application/json
      description: Gets the list of network devices for the given range
      operationId: ''
      parameters:
      - description: Start index
        in: path
        name: startIndex
        required: true
        type: integer
      - description: Number of records to return
        in: path
        name: recordsToReturn
        required: true
        type: integer
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/NetworkDeviceListResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieves network device by range
      tags:
      - Network Device
  /api/v1/onboarding/pnp-device:
    get:
      consumes:
      - application/json
      description: This API is used to get the list of devices that match the provided
        filter. Pagination and sorting are also supported. If a limit is not specified,
        it will default to return 50 devices.
      operationId: ''
      parameters:
      - description: Limits number of results
        in: query
        name: limit
        required: false
        type: integer
      - description: Index of first result
        in: query
        name: offset
        required: false
        type: integer
      - description: Comma seperated list of fields to sort on
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      - description: Sort Order Ascending (asc) or Descending (des)
        in: query
        name: sortOrder
        required: false
        type: string
      - description: Device Serial Number
        in: query
        items:
          type: string
        name: serialNumber
        required: false
        type: array
      - description: Device State
        in: query
        items:
          type: string
        name: state
        required: false
        type: array
      - description: Device Onboarding State
        in: query
        items:
          type: string
        name: onbState
        required: false
        type: array
      - description: Device Connection Manager State
        in: query
        items:
          type: string
        name: cmState
        required: false
        type: array
      - description: Device Name
        in: query
        items:
          type: string
        name: name
        required: false
        type: array
      - description: Device ProductId
        in: query
        items:
          type: string
        name: pid
        required: false
        type: array
      - description: Device Source
        in: query
        items:
          type: string
        name: source
        required: false
        type: array
      - description: Device Project Id
        in: query
        items:
          type: string
        name: projectId
        required: false
        type: array
      - description: Device Workflow Id
        in: query
        items:
          type: string
        name: workflowId
        required: false
        type: array
      - description: Device Project Name
        in: query
        items:
          type: string
        name: projectName
        required: false
        type: array
      - description: Device Workflow Name
        in: query
        items:
          type: string
        name: workflowName
        required: false
        type: array
      - description: Device Smart Account
        in: query
        items:
          type: string
        name: smartAccountId
        required: false
        type: array
      - description: Device Virtual Account
        in: query
        items:
          type: string
        name: virtualAccountId
        required: false
        type: array
      - description: Device Has Contacted lastContact > 0
        in: query
        name: lastContact
        required: false
        type: boolean
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/ListDevicesResponse'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: List devices
      tags:
      - PnP
    post:
      consumes:
      - application/json
      description: This API is used to add a Planned device to the PnP database. A
        Planned device is a device that the customer has bought and/or is planning
        to manage.
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/Device'
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/CreateDeviceResponse'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Create Device
      tags:
      - PnP
  /api/v1/onboarding/pnp-device/claim:
    post:
      consumes:
      - application/json
      description: This API is used to assign a project & workflow (i.e. claim) one
        of more devices.
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/ClaimDeviceRequest'
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/ClaimDevicesResponse'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Claim Device(s)
      tags:
      - PnP
  /api/v1/onboarding/pnp-device/count:
    get:
      consumes:
      - application/json
      description: This API is used to get the number of the devices matching provided
        filters. This is useful for pageination.
      operationId: ''
      parameters:
      - description: Device Serial Number
        in: query
        items:
          type: string
        name: serialNumber
        required: false
        type: array
      - description: Device State
        in: query
        items:
          type: string
        name: state
        required: false
        type: array
      - description: Device Onboarding State
        in: query
        items:
          type: string
        name: onbState
        required: false
        type: array
      - description: Device Connection Manager State
        in: query
        items:
          type: string
        name: cmState
        required: false
        type: array
      - description: Device Name
        in: query
        items:
          type: string
        name: name
        required: false
        type: array
      - description: Device ProductId
        in: query
        items:
          type: string
        name: pid
        required: false
        type: array
      - description: Device Source
        in: query
        items:
          type: string
        name: source
        required: false
        type: array
      - description: Device Project Id
        in: query
        items:
          type: string
        name: projectId
        required: false
        type: array
      - description: Device Workflow Id
        in: query
        items:
          type: string
        name: workflowId
        required: false
        type: array
      - description: Device Project Name
        in: query
        items:
          type: string
        name: projectName
        required: false
        type: array
      - description: Device Workflow Name
        in: query
        items:
          type: string
        name: workflowName
        required: false
        type: array
      - description: Device Smart Account
        in: query
        items:
          type: string
        name: smartAccountId
        required: false
        type: array
      - description: Device Virtual Account
        in: query
        items:
          type: string
        name: virtualAccountId
        required: false
        type: array
      - description: Device Has Contacted lastContact > 0
        in: query
        name: lastContact
        required: false
        type: boolean
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/GetDeviceCountResponse'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Get Device Count
      tags:
      - PnP
  /api/v1/onboarding/pnp-device/dashboard/count:
    get:
      consumes:
      - application/json
      description: Get Categorized Device Count
      operationId: ''
      parameters:
      - description: 'Valid Values: state, errorState, onbState or source'
        in: query
        name: category
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/GetCategorizedDeviceCountResponse'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Get Categorized Device Count
      tags:
      - PnP
  /api/v1/onboarding/pnp-device/history:
    get:
      consumes:
      - application/json
      description: Retrieves history for a specific device. Serial Number is a required
        parameter
      operationId: ''
      parameters:
      - description: Device Serial Number
        in: query
        name: serialNumber
        required: true
        type: string
      - description: Comma seperated list of fields to sort on
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      - description: Sort Order Ascending (asc) or Descending (des)
        in: query
        name: sortOrder
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/GetDeviceHistoryResponse'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Get Device History
      tags:
      - PnP
  /api/v1/onboarding/pnp-device/import:
    post:
      consumes:
      - application/json
      description: This API is used to import a list of Planned devices to the PnP
        database. A Planned device is a device that the customer has bought and/or
        is planning to manage.
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/Device'
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/ImportManyDevicesResponse'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Import Many Devices
      tags:
      - PnP
  /api/v1/onboarding/pnp-device/provision:
    post:
      consumes:
      - application/json
      description: This API is used push one or more devices to Provisoned state and
        add them to inventory.
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/PushProvisionRequest'
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/ProvisionDeviceResponse'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Provision Device
      tags:
      - PnP
  /api/v1/onboarding/pnp-device/reset:
    post:
      consumes:
      - application/json
      description: This API is used to recover a device from a Workflow Execution
        Error state.
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/ResetRequest'
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/ResetDeviceResponse'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Reset Device
      tags:
      - PnP
  /api/v1/onboarding/pnp-device/sacct/{domain}/vacct/{name}/sync-result:
    get:
      consumes:
      - application/json
      description: This API is used to get the device sync info from the given smart
        account & virtual account with the PnP database. The SAVAMapping object which
        has the list of devices synced since the last sync is returned in the response.
      operationId: ''
      parameters:
      - description: Smart Account Domain
        in: path
        name: domain
        required: true
        type: string
      - description: Virtual Account Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/GetSyncResultForVirtualAccountResponse'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Get Sync Result for Virtual Account
      tags:
      - PnP
  /api/v1/onboarding/pnp-device/unclaim:
    post:
      consumes:
      - application/json
      description: This API is used to unassign the project and workflow from one
        or more device.A device can only be unclaimed if it has not begun provisioning.
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/UnclaimRequest'
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/UnClaimDeviceResponse'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Un-Claim Device
      tags:
      - PnP
  /api/v1/onboarding/pnp-device/vacct-sync:
    post:
      consumes:
      - application/json
      description: This API is used to sync the device info from the given smart account
        & virtual account with the PnP database. The list of synced devices is returned
        in the response.
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/SAVAMapping'
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/SyncVirtualAccountDevicesResponse'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Sync Virtual Account Devices
      tags:
      - PnP
  /api/v1/onboarding/pnp-device/{id}:
    delete:
      consumes:
      - application/json
      description: This API is used to delete the specified device from the database.
      operationId: ''
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/DeleteDeviceResponse'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Delete Device
      tags:
      - PnP
    get:
      consumes:
      - application/json
      description: Get device details of the device with input device id
      operationId: ''
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/GetDeviceByIDResponse'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Get Device by ID
      tags:
      - PnP
    put:
      consumes:
      - application/json
      description: This API is used to update device details of a device that exists
        in the PnP database.
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/Device'
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/UpdateDeviceResponse'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Update Device
      tags:
      - PnP
  /api/v1/onboarding/pnp-settings:
    get:
      consumes:
      - application/json
      description: Get this user's list of global PnP settings
      operationId: ''
      parameters: []
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/ViewSettingsResponse'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: View Settings
      tags:
      - PnP
    put:
      consumes:
      - application/json
      description: Change this user's list of global PnP settings
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/Settings'
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/UpdateSettingsResponse'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Update Settings
      tags:
      - PnP
  /api/v1/onboarding/pnp-settings/sacct:
    get:
      consumes:
      - application/json
      description: This API is used to get list of Smart Accounts. The list of smart
        account domains is returned in the response.
      operationId: ''
      parameters: []
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/GetSmartAccountListResponse'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Get Smart Account List
      tags:
      - PnP
  /api/v1/onboarding/pnp-settings/sacct/{domain}/vacct:
    get:
      consumes:
      - application/json
      description: This API is used to get list of Virtual Accounts associated with
        the specified Smart Account. The list of virtual account names is returned
        in the response.
      operationId: ''
      parameters:
      - description: Smart Account Domain
        in: path
        name: domain
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/GetVirtualAccountListResponse'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Get Virtual Account List
      tags:
      - PnP
  /api/v1/onboarding/pnp-settings/savacct:
    post:
      consumes:
      - application/json
      description: This API is used to register a Smart Account, Virtual Account and
        the relevant server profile info with the PnP System & database. The devices
        present in the registered virtual account are synced with the PnP database
        as well. The new profile is returned in the response.
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/SAVAMapping'
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/AddVirtualAccountResponse'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Add Virtual Account
      tags:
      - PnP
    put:
      consumes:
      - application/json
      description: This API is used to edit the PnP Server profile in a registered
        Virtual Account in the PnP database.The edited smart & virtual account info
        is returned in the response.
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/SAVAMapping'
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/EditPnPServerProfileResponse'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Edit PnP Server Profile
      tags:
      - PnP
  /api/v1/onboarding/pnp-settings/vacct:
    delete:
      consumes:
      - application/json
      description: This API is used to deregister the specified smart account & virtual
        account info and the associated device information from the PnP System & database.
        The devices associated with the deregistered virtual account are removed from
        the PnP database as well. The deregistered smart & virtual account info is
        returned in the response.
      operationId: ''
      parameters:
      - description: Smart Account Domain
        in: query
        name: domain
        required: true
        type: string
      - description: Virtual Account Name
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/DeregisterVirtualAccountResponse'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Deregister Virtual Account
      tags:
      - PnP
  /api/v1/onboarding/pnp-workflow:
    get:
      consumes:
      - application/json
      description: This API is used to get the list of workflows that match the provided
        filter. Pagination and sorting are also supported. If a limit is not specified,
        it will default to return 50 workflows.
      operationId: ''
      parameters:
      - description: Limits number of results
        in: query
        name: limit
        required: false
        type: integer
      - description: Index of first result
        in: query
        name: offset
        required: false
        type: integer
      - description: Comma seperated lost of fields to sort on
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      - description: Sort Order Ascending (asc) or Descending (des)
        in: query
        name: sortOrder
        required: false
        type: string
      - description: Workflow Type
        in: query
        items:
          type: string
        name: type
        required: false
        type: array
      - description: Workflow Name
        in: query
        items:
          type: string
        name: name
        required: false
        type: array
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/ListWorkflowsResponse'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: List Workflows
      tags:
      - PnP
    post:
      consumes:
      - application/json
      description: This API is used to add a PnP Workflow along with the relevant
        tasks in the workflow into the PnP database.
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/Workflow'
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/CreateWorkflowResponse'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Create Workflow
      tags:
      - PnP
  /api/v1/onboarding/pnp-workflow/count:
    get:
      consumes:
      - application/json
      description: This API is used to get the number of the workflows.
      operationId: ''
      parameters:
      - description: Workflow Name
        in: query
        items:
          type: string
        name: name
        required: false
        type: array
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/GetWorkflowCountResponse'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Get Workflow Count
      tags:
      - PnP
  /api/v1/onboarding/pnp-workflow/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a workflow given its id
      operationId: ''
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/DeleteWorkflowResponse'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Delete Workflow
      tags:
      - PnP
    get:
      consumes:
      - application/json
      description: Get a workflow given its id
      operationId: ''
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/GetWorkflowResponse'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Get Workflow
      tags:
      - PnP
    put:
      consumes:
      - application/json
      description: Update an existing workflow
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/Workflow'
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/UpdateWorkflowResponse'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Update Workflow
      tags:
      - PnP
  /api/v1/snmp-property:
    get:
      consumes:
      - application/json
      description: This method is used to get SNMP properties
      operationId: ''
      parameters: []
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/SystemPropertyListResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Retrieves SNMP properties
      tags:
      - Network Device
    post:
      consumes:
      - application/json
      description: This method is used to add SNMP properties
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/SystemPropertyNameAndIntValueDTO'
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskIdResult'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Creates or updates SNMP properties
      tags:
      - Network Device
  /api/v1/task:
    get:
      consumes:
      - application/json
      description: This method is used to retrieve task(s) based on various filters
      operationId: ''
      parameters:
      - description: This is the epoch start time from which tasks need to be fetched
        in: query
        name: startTime
        required: false
        type: string
      - description: This is the epoch end time upto which audit records need to be
          fetched
        in: query
        name: endTime
        required: false
        type: string
      - description: Fetch tasks that contains this data
        in: query
        name: data
        required: false
        type: string
      - description: Fetch tasks that have this error code
        in: query
        name: errorCode
        required: false
        type: string
      - description: Fetch tasks with this service type
        in: query
        name: serviceType
        required: false
        type: string
      - description: Fetch tasks with this username
        in: query
        name: username
        required: false
        type: string
      - description: Fetch tasks that contains this progress
        in: query
        name: progress
        required: false
        type: string
      - description: 'Fetch tasks ended as success or failure. Valid values: true,
          false'
        in: query
        name: isError
        required: false
        type: string
      - description: Fetch tasks that contains this failure reason
        in: query
        name: failureReason
        required: false
        type: string
      - description: Fetch tasks that have this parent Id
        in: query
        name: parentId
        required: false
        type: string
      - description: offset
        in: query
        name: offset
        required: false
        type: string
      - description: limit
        in: query
        name: limit
        required: false
        type: string
      - description: Sort results by this field
        in: query
        name: sortBy
        required: false
        type: string
      - description: Sort order - asc or dsc
        in: query
        name: order
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskDTOListResponse'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Get filtered tasks
      tags:
      - Task
  /api/v1/task/count:
    get:
      consumes:
      - application/json
      description: This method is used to retrieve task count
      operationId: ''
      parameters:
      - description: This is the epoch start time from which tasks need to be fetched
        in: query
        name: startTime
        required: false
        type: string
      - description: This is the epoch end time upto which audit records need to be
          fetched
        in: query
        name: endTime
        required: false
        type: string
      - description: Fetch tasks that contains this data
        in: query
        name: data
        required: false
        type: string
      - description: Fetch tasks that have this error code
        in: query
        name: errorCode
        required: false
        type: string
      - description: Fetch tasks with this service type
        in: query
        name: serviceType
        required: false
        type: string
      - description: Fetch tasks with this username
        in: query
        name: username
        required: false
        type: string
      - description: Fetch tasks that contains this progress
        in: query
        name: progress
        required: false
        type: string
      - description: 'Fetch tasks ended as success or failure. Valid values: true,
          false'
        in: query
        name: isError
        required: false
        type: string
      - description: Fetch tasks that contains this failure reason
        in: query
        name: failureReason
        required: false
        type: string
      - description: Fetch tasks that have this parent Id
        in: query
        name: parentId
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/CountResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Get task count
      tags:
      - Task
  /api/v1/task/operation/{operationId}/{offset}/{limit}:
    get:
      consumes:
      - application/json
      description: 'This method is used to find root tasks assoicated to an operationid '
      operationId: ''
      parameters:
      - description: operationId
        in: path
        name: operationId
        required: true
        type: string
      - description: Index, minimum value is 0
        in: path
        name: offset
        required: true
        type: integer
      - description: The maximum value of {limit} supported is 500. <br/> Base 1 indexing
          for {limit}, minimum value is 1
        in: path
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskDTOListResponse'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: If {limit} value is more than 500
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: getTaskByOperationId
      tags:
      - Task
  /api/v1/task/{taskId}:
    get:
      consumes:
      - application/json
      description: This method is used to retrieve a task based on their id
      operationId: ''
      parameters:
      - description: UUID of the Task
        in: path
        name: taskId
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskDTOResponse'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: No task corresponding to the id was found
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: getTruststoreFileCount
      tags:
      - Task
  /api/v1/task/{taskId}/tree:
    get:
      consumes:
      - application/json
      description: This method is used to retrieve a task with its children tasks
        based on their id
      operationId: ''
      parameters:
      - description: UUID of the Task
        in: path
        name: taskId
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskDTOListResponse'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: No task corresponding to the id was found
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Get Task Tree
      tags:
      - Task
  /api/v1/template-programmer/project:
    get:
      consumes:
      - application/json
      description: List the projects
      operationId: ''
      parameters:
      - description: Name of project to be searched
        in: query
        name: name
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/CollectionProjectDTO'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Gets a list of projects
      tags:
      - Template Programmmer
    post:
      consumes:
      - application/json
      description: This API is used to create a new project.
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/ProjectDTO'
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskIdResult'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Create Project
      tags:
      - Template Programmmer
    put:
      consumes:
      - application/json
      description: This API is used to update an existing project.
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/ProjectDTO'
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskIdResult'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Update Project
      tags:
      - Template Programmmer
  /api/v1/template-programmer/project/{projectId}:
    delete:
      consumes:
      - application/json
      description: Deletes the project
      operationId: ''
      parameters:
      - description: projectId
        in: path
        name: projectId
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskIdResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Deletes the project
      tags:
      - Template Programmmer
  /api/v1/template-programmer/project/{projectId}/template:
    post:
      consumes:
      - application/json
      description: API to create a template.
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/TemplateDTO'
      - description: projectId
        in: path
        name: projectId
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskIdResult'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Create Template
      tags:
      - Template Programmmer
  /api/v1/template-programmer/template:
    get:
      consumes:
      - application/json
      description: Gets the templates available depending on the criteria
      operationId: ''
      parameters:
      - description: projectId
        in: query
        name: projectId
        required: false
        type: string
      - description: softwareType
        in: query
        name: softwareType
        required: false
        type: string
      - description: softwareVersion
        in: query
        name: softwareVersion
        required: false
        type: string
      - description: productFamily
        in: query
        name: productFamily
        required: false
        type: string
      - description: productSeries
        in: query
        name: productSeries
        required: false
        type: string
      - description: productType
        in: query
        name: productType
        required: false
        type: string
      - description: includeHead
        in: query
        name: includeHead
        required: false
        type: boolean
      - description: filterConflictingTemplates
        in: query
        name: filterConflictingTemplates
        required: false
        type: boolean
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/CollectionTemplateInfo'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Gets the templates available depending on the criteria
      tags:
      - Template Programmmer
    put:
      consumes:
      - application/json
      description: API to update a template.
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/TemplateDTO'
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskIdResult'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Update Template
      tags:
      - Template Programmmer
  /api/v1/template-programmer/template/deploy:
    post:
      consumes:
      - application/json
      description: API to deploy a template.
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/TemplateDeploymentInfo'
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TemplateDeploymentStatusDTO'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Deploy Template
      tags:
      - Template Programmmer
  /api/v1/template-programmer/template/deploy/status/{deploymentId}:
    get:
      consumes:
      - application/json
      description: API to retrieve the status of template deployment.
      operationId: ''
      parameters:
      - description: deploymentId
        in: path
        name: deploymentId
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TemplateDeploymentStatusDTO'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Status of template deployment
      tags:
      - Template Programmmer
  /api/v1/template-programmer/template/preview:
    put:
      consumes:
      - application/json
      description: API to preview a template.
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/TemplatePreviewRequestDTO'
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TemplatePreviewResponseDTO'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Preview Template
      tags:
      - Template Programmmer
  /api/v1/template-programmer/template/version:
    post:
      consumes:
      - application/json
      description: API to version the current contents of the template.
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/TemplateVersionRequestDTO'
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskIdResult'
        '201':
          description: The POST/PUT request was fulfilled and a new resource has been
            created. Information about the resource is in the response body.
        '202':
          description: The request was accepted for processing, but the processing
            has not been completed.
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Version Template
      tags:
      - Template Programmmer
  /api/v1/template-programmer/template/version/{templateId}:
    get:
      consumes:
      - application/json
      description: Get all the versions of template
      operationId: ''
      parameters:
      - description: templateId
        in: path
        name: templateId
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/CollectionTemplateInfo'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Gets all the versions of a given template
      tags:
      - Template Programmmer
  /api/v1/template-programmer/template/{templateId}:
    delete:
      consumes:
      - application/json
      description: Deletes the template
      operationId: ''
      parameters:
      - description: templateId
        in: path
        name: templateId
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TaskIdResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Deletes the template
      tags:
      - Template Programmmer
    get:
      consumes:
      - application/json
      description: Details of the template
      operationId: ''
      parameters:
      - description: templateId
        in: path
        name: templateId
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TemplateDTO'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: Gets details of a given template
      tags:
      - Template Programmmer
  /api/v1/topology/l2/{vlanID}:
    get:
      consumes:
      - application/json
      description: This method is used to obtain the Layer 2 topology by Vlan ID
      operationId: ''
      parameters:
      - description: Vlan Name for e.g Vlan1, Vlan23 etc
        in: path
        name: vlanID
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TopologyResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: getL2Topology
      tags:
      - Networks
  /api/v1/topology/l3/{topologyType}:
    get:
      consumes:
      - application/json
      description: This method is used to obtain Layer 3 device topology by routing
        protocol type
      operationId: ''
      parameters:
      - description: Type of topology(OSPF,ISIS,etc)
        in: path
        name: topologyType
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TopologyResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: getL3Topology
      tags:
      - Networks
  /api/v1/topology/physical-topology:
    get:
      consumes:
      - application/json
      description: This method is used to obtain the raw physical topology and filter
        based on nodeType
      operationId: ''
      parameters:
      - description: nodeType
        in: query
        name: nodeType
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/TopologyResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: getPhysicalTopology
      tags:
      - Networks
  /api/v1/topology/site-topology:
    get:
      consumes:
      - application/json
      description: This method is used to obtain the site topology
      operationId: ''
      parameters: []
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/SiteResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: getSiteTopology
      tags:
      - Networks
  /api/v1/topology/vlan/vlan-names:
    get:
      consumes:
      - application/json
      description: This method is used to obtain the list of vlan names
      operationId: ''
      parameters: []
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/VlanNamesResult'
        '204':
          description: The request was successful, however no content was returned.
        '206':
          description: The GET request included a Range Header, and the server responded
            with the partial content matching the range.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '403':
          description: The server recognizes the authentication credentials, but the
            client is not authorized to perform this request.
        '404':
          description: The client made a request for a resource that does not exist.
        '409':
          description: The target resource is in a conflicted state (for example,
            an edit conflict where a resource is being edited by multiple users).
            Retrying the request later might succeed.
        '415':
          description: The client sent a request body in a format that the server
            does not support (for example, XML to a server that only accepts JSON).
        '500':
          description: The server could not fulfill the request.
        '501':
          description: The server has not implemented the functionality required to
            fulfill the request.
        '503':
          description: The server is (temporarily) unavailable.
        '504':
          description: The server did not respond inside time restrictions and timed-out.
      summary: getVlanNames
      tags:
      - Networks
  /api/v2/ippool:
    get:
      description: Fetches all IP Pools.
      responses:
        200:
          description: Fetches all IP Pools.
          schema:
            type: object
      summary: Fetches a list of configured IP Pools
    post:
      description: Creates an IP Pool.
      parameters:
      - description: IP pool object
        in: body
        name: ippool
        required: true
        schema:
          $ref: '#/definitions/Ippool'
      responses:
        200:
          description: Create an IP Pool
          schema:
            type: object
      summary: Adds an IP pool to DNAC
  /api/v2/ippool/{poolId}:
    delete:
      description: Deletes an IP Pool.
      parameters:
      - description: UID of IP Pool to delete
        in: path
        name: poolId
        required: true
        type: string
      responses:
        204:
          description: IP Pool deleted
          schema:
            type: object
      summary: Deletes an IP pool to DNAC
  /dna/intent/api/v1/application-policy:
    get:
      consumes:
      - application/json
      description: Invoke the API to return all (or specific) application-policy(ies)
      operationId: ''
      parameters:
      - default: false
        description: Enable this parameter to execute the API and return a response
          synchronously
        in: header
        name: __runsync
        required: false
        type: boolean
      - default: '10'
        description: During synchronous execution, this defines the maximum time to
          wait for a response, before the API execution is terminated
        in: header
        name: __timeout
        required: false
        type: number
      - default: '1'
        description: ''
        in: header
        name: offset
        required: false
        type: number
      - default: '500'
        description: ''
        in: header
        name: limit
        required: false
        type: number
      - default: ''
        description: ''
        in: header
        name: applicationPolicyNamespace
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '404':
          description: The client made a request for a resource that does not exist.
        '500':
          description: The server could not fulfill the request.
      summary: Get Application Policies
      tags:
      - 'Intent: Application Policy'
  /dna/intent/api/v1/application-set/count:
    get:
      consumes:
      - application/json
      description: Invoke the API to return the number of defined application sets
      operationId: ''
      parameters:
      - default: false
        description: Enable this parameter to execute the API and return a response
          synchronously
        in: header
        name: __runsync
        required: false
        type: boolean
      - default: '10'
        description: During synchronous execution, this defines the maximum time to
          wait for a response, before the API execution is terminated
        in: header
        name: __timeout
        required: false
        type: number
      - description: ''
        in: path
        name: count
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '404':
          description: The client made a request for a resource that does not exist.
        '500':
          description: The server could not fulfill the request.
      summary: Get Application Sets Count
      tags:
      - 'Intent: Application Policy'
  /dna/intent/api/v1/application-sets:
    get:
      consumes:
      - application/json
      description: Invoke the API to return all (or specific) defined application-set(s)
      operationId: ''
      parameters:
      - default: false
        description: Enable this parameter to execute the API and return a response
          synchronously
        in: header
        name: __runsync
        required: false
        type: boolean
      - default: '10'
        description: During synchronous execution, this defines the maximum time to
          wait for a response, before the API execution is terminated
        in: header
        name: __timeout
        required: false
        type: number
      - default: '1'
        description: ''
        in: header
        name: offset
        required: false
        type: number
      - default: '500'
        description: ''
        in: header
        name: limit
        required: false
        type: number
      - default: ''
        description: ''
        in: header
        name: applicationSetName
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '404':
          description: The client made a request for a resource that does not exist.
        '500':
          description: The server could not fulfill the request.
      summary: Get Application Sets
      tags:
      - 'Intent: Application Policy'
  /dna/intent/api/v1/application/count:
    get:
      consumes:
      - application/json
      description: Invoke the API to return the number of defined applications
      operationId: ''
      parameters:
      - default: false
        description: Enable this parameter to execute the API and return a response
          synchronously
        in: header
        name: __runsync
        required: false
        type: boolean
      - default: '10'
        description: During synchronous execution, this defines the maximum time to
          wait for a response, before the API execution is terminated
        in: header
        name: __timeout
        required: false
        type: number
      - description: ''
        in: path
        name: count
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '404':
          description: The client made a request for a resource that does not exist.
        '500':
          description: The server could not fulfill the request.
      summary: Get Applications Count
      tags:
      - 'Intent: Application Policy'
  /dna/intent/api/v1/applications:
    get:
      consumes:
      - application/json
      description: Invoke the API to return the list of all (or specific) defined
        application(s)
      operationId: ''
      parameters:
      - default: false
        description: Enable this parameter to execute the API and return a response
          synchronously
        in: header
        name: __runsync
        required: false
        type: boolean
      - default: '10'
        description: During synchronous execution, this defines the maximum time to
          wait for a response, before the API execution is terminated
        in: header
        name: __timeout
        required: false
        type: number
      - default: '1'
        description: ''
        in: header
        name: offset
        required: false
        type: number
      - default: '500'
        description: ''
        in: header
        name: limit
        required: false
        type: number
      - default: ''
        description: ''
        in: header
        name: applicationName
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '404':
          description: The client made a request for a resource that does not exist.
        '500':
          description: The server could not fulfill the request.
      summary: Get Applications
      tags:
      - 'Intent: Application Policy'
  /dna/intent/api/v1/client-detail:
    get:
      consumes:
      - application/json
      description: Get Client Details for a single client
      operationId: ''
      parameters:
      - default: false
        description: Enable this parameter to execute the API and return a response
          synchronously
        in: header
        name: __runsync
        required: false
        type: boolean
      - default: '10'
        description: During synchronous execution, this defines the maximum time to
          wait for a response, before the API execution is terminated
        in: header
        name: __timeout
        required: false
        type: number
      - default: ''
        description: timestamp
        in: query
        name: timestamp
        required: true
        type: string
      - default: ''
        description: MAC Address of the client
        in: query
        name: macAddress
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/ClientDetailResponse'
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '404':
          description: The client made a request for a resource that does not exist.
        '500':
          description: The server could not fulfill the request.
      summary: Client Detail
      tags:
      - 'Intent: Clients'
      - 'Intent: Detail'
      - 'Intent: API'
  /dna/intent/api/v1/client-health:
    get:
      consumes:
      - application/json
      description: Get overall Client Health along with beak down on categories of
        wired and wireless
      operationId: ''
      parameters:
      - default: false
        description: Enable this parameter to execute the API and return a response
          synchronously
        in: header
        name: __runsync
        required: false
        type: boolean
      - default: '10'
        description: During synchronous execution, this defines the maximum time to
          wait for a response, before the API execution is terminated
        in: header
        name: __timeout
        required: false
        type: number
      - default: ''
        description: Start Time
        in: query
        name: startTime
        required: true
        type: string
      - default: ''
        description: End Time
        in: query
        name: endTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/ClientHealthResponse'
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '404':
          description: The client made a request for a resource that does not exist.
        '500':
          description: The server could not fulfill the request.
      summary: Client Health
      tags:
      - 'Intent: API'
      - 'Intent: Clients'
      - 'Intent: Health'
  /dna/intent/api/v1/create-application:
    post:
      consumes:
      - application/json
      description: Invoke the API to create a custom application
      operationId: ''
      parameters:
      - default: false
        description: Enable this parameter to execute the API and return a response
          synchronously
        in: header
        name: __runsync
        required: false
        type: boolean
      - default: '10'
        description: During synchronous execution, this defines the maximum time to
          wait for a response, before the API execution is terminated
        in: header
        name: __timeout
        required: false
        type: number
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '404':
          description: The client made a request for a resource that does not exist.
        '500':
          description: The server could not fulfill the request.
      summary: Post Application
      tags:
      - 'Intent: Application Policy'
  /dna/intent/api/v1/create-application-policy:
    post:
      consumes:
      - application/json
      description: Invoke the API to create, modify or delete an application-policy
      operationId: ''
      parameters:
      - default: false
        description: Enable this parameter to execute the API and return a response
          synchronously
        in: header
        name: __runsync
        required: false
        type: boolean
      - default: '10'
        description: During synchronous execution, this defines the maximum time to
          wait for a response, before the API execution is terminated
        in: header
        name: __timeout
        required: false
        type: number
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '404':
          description: The client made a request for a resource that does not exist.
        '500':
          description: The server could not fulfill the request.
      summary: Post Application Policy Intent
      tags:
      - 'Intent: Application Policy'
  /dna/intent/api/v1/create-application-set:
    post:
      consumes:
      - application/json
      description: Invoke the API to create a custom application set
      operationId: ''
      parameters:
      - default: false
        description: Enable this parameter to execute the API and return a response
          synchronously
        in: header
        name: __runsync
        required: false
        type: boolean
      - default: '10'
        description: During synchronous execution, this defines the maximum time to
          wait for a response, before the API execution is terminated
        in: header
        name: __timeout
        required: false
        type: number
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '404':
          description: The client made a request for a resource that does not exist.
        '500':
          description: The server could not fulfill the request.
      summary: Post Application Set
      tags:
      - 'Intent: Application Policy'
  /dna/intent/api/v1/create-ssid:
    post:
      consumes:
      - application/json
      description: Creates non fabric enterprise SSID, dynamic interface, Wireless
        Network Profile and provisions WLC and AP
      operationId: ''
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/CreateSSIDRequest'
      - default: false
        description: Enable this parameter to execute the API and return a response
          synchronously
        in: header
        name: __runsync
        required: false
        type: boolean
      - default: '10'
        description: During synchronous execution, this defines the maximum time to
          wait for a response, before the API execution is terminated
        in: header
        name: __timeout
        required: false
        type: number
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/CreateSSIDResponse'
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '404':
          description: The client made a request for a resource that does not exist.
        '500':
          description: The server could not fulfill the request.
      summary: Create SSID
      tags:
      - 'Intent: WLC'
      - 'Intent: Connectivity'
  /dna/intent/api/v1/delete-application:
    delete:
      consumes:
      - application/json
      description: Invoke the API to delete a custom application
      operationId: ''
      parameters:
      - default: false
        description: Enable this parameter to execute the API and return a response
          synchronously
        in: header
        name: __runsync
        required: false
        type: boolean
      - default: '10'
        description: During synchronous execution, this defines the maximum time to
          wait for a response, before the API execution is terminated
        in: header
        name: __timeout
        required: false
        type: number
      - default: ''
        description: ''
        in: header
        name: applicationId
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '404':
          description: The client made a request for a resource that does not exist.
        '500':
          description: The server could not fulfill the request.
      summary: Delete Application
      tags:
      - 'Intent: Application Policy'
  /dna/intent/api/v1/delete-application-set:
    delete:
      consumes:
      - application/json
      description: Invoke the API to delete a custom application
      operationId: ''
      parameters:
      - default: false
        description: Enable this parameter to execute the API and return a response
          synchronously
        in: header
        name: __runsync
        required: false
        type: boolean
      - default: '10'
        description: During synchronous execution, this defines the maximum time to
          wait for a response, before the API execution is terminated
        in: header
        name: __timeout
        required: false
        type: number
      - default: ''
        description: ''
        in: header
        name: applicationSetId
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '404':
          description: The client made a request for a resource that does not exist.
        '500':
          description: The server could not fulfill the request.
      summary: Delete Application Set
      tags:
      - 'Intent: Application Policy'
  /dna/intent/api/v1/delete-ssid/{deviceName}/{wirelessNetworkProfileName}/{ssidName}/{interfaceName}:
    delete:
      consumes:
      - application/json
      description: De-provision WLC, also removes wireless network profile, SSID and
        dynamic interface
      operationId: ''
      parameters:
      - default: false
        description: Enable this parameter to execute the API and return a response
          synchronously
        in: header
        name: __runsync
        required: false
        type: boolean
      - default: '10'
        description: During synchronous execution, this defines the maximum time to
          wait for a response, before the API execution is terminated
        in: header
        name: __timeout
        required: false
        type: number
      - description: ''
        in: path
        name: deviceName
        required: true
        type: string
      - description: ''
        in: path
        name: wirelessNetworkProfileName
        required: true
        type: string
      - description: ''
        in: path
        name: ssidName
        required: true
        type: string
      - description: ''
        in: path
        name: interfaceName
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/DeleteSSIDResponse'
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '404':
          description: The client made a request for a resource that does not exist.
        '500':
          description: The server could not fulfill the request.
      summary: Delete SSID
      tags:
      - 'Intent: WLC'
      - 'Intent: Connectivity'
  /dna/intent/api/v1/network-device-detail:
    get:
      consumes:
      - application/json
      description: Get Network Device Detail
      operationId: ''
      parameters:
      - default: false
        description: Enable this parameter to execute the API and return a response
          synchronously
        in: header
        name: __runsync
        required: false
        type: boolean
      - default: '10'
        description: During synchronous execution, this defines the maximum time to
          wait for a response, before the API execution is terminated
        in: header
        name: __timeout
        required: false
        type: number
      - default: ''
        description: timestamp
        in: query
        name: timestamp
        required: false
        type: string
      - default: ''
        description: MAC Address or UUID or Name of the Device
        in: query
        name: searchBy
        required: false
        type: string
      - default: ''
        description: macAddress or uuid or nwDeviceName
        in: query
        name: identifier
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/NetworkDeviceDetailResponse'
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '404':
          description: The client made a request for a resource that does not exist.
        '500':
          description: The server could not fulfill the request.
      summary: Network Device Detail
      tags:
      - 'Intent: Devices'
      - 'Intent: Detail'
      - 'Intent: API'
  /dna/intent/api/v1/network-health:
    get:
      consumes:
      - application/json
      description: Network Devices and their health by category
      operationId: ''
      parameters:
      - default: false
        description: Enable this parameter to execute the API and return a response
          synchronously
        in: header
        name: __runsync
        required: false
        type: boolean
      - default: '10'
        description: During synchronous execution, this defines the maximum time to
          wait for a response, before the API execution is terminated
        in: header
        name: __timeout
        required: false
        type: number
      - default: ''
        description: Start Time
        in: query
        name: startTime
        required: true
        type: string
      - default: ''
        description: End Time
        in: query
        name: endTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '404':
          description: The client made a request for a resource that does not exist.
        '500':
          description: The server could not fulfill the request.
      summary: Network Health
      tags:
      - 'Intent: Devices'
      - 'Intent: Health'
      - 'Intent: API'
  /dna/intent/api/v1/site-hierarchy:
    get:
      consumes:
      - application/json
      description: Site Hierarchy along with health Info
      operationId: ''
      parameters:
      - default: false
        description: Enable this parameter to execute the API and return a response
          synchronously
        in: header
        name: __runsync
        required: false
        type: boolean
      - default: '10'
        description: During synchronous execution, this defines the maximum time to
          wait for a response, before the API execution is terminated
        in: header
        name: __timeout
        required: false
        type: number
      - default: ''
        description: 'Timestamp '
        in: query
        name: timestamp
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
          schema:
            $ref: '#/definitions/SiteHierarchyResponse'
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '404':
          description: The client made a request for a resource that does not exist.
        '500':
          description: The server could not fulfill the request.
      summary: Site Hierarchy
      tags:
      - 'Intent: Sites'
      - 'Intent: Health'
      - 'Intent: API'
  /dna/intent/api/v1/update-application:
    put:
      consumes:
      - application/json
      description: Invoke the API to create a custom application
      operationId: ''
      parameters:
      - default: false
        description: Enable this parameter to execute the API and return a response
          synchronously
        in: header
        name: __runsync
        required: false
        type: boolean
      - default: '10'
        description: During synchronous execution, this defines the maximum time to
          wait for a response, before the API execution is terminated
        in: header
        name: __timeout
        required: false
        type: number
      produces:
      - application/json
      responses:
        '200':
          description: The request was successful. The result is contained in the
            response body.
        '400':
          description: The client made a request that the server could not understand
            (for example, the request syntax is incorrect).
        '401':
          description: The client's authentication credentials included with the request
            are missing or invalid.
        '404':
          description: The client made a request for a resource that does not exist.
        '500':
          description: The server could not fulfill the request.
      summary: Edit Application
      tags:
      - 'Intent: Application Policy'
schemes: []
security:
- APIKeyHeader: []
securityDefinitions:
  APIKeyHeader:
    in: header
    name: X-Auth-Token
    type: apiKey
  basicAuth:
    type: basic
swagger: '2.0'
tags: []
